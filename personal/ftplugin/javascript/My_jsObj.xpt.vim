XPTemplate priority=lang

let s:f = g:XPTfuncs()

fun! s:f._xJsObjects()
	let objj = {
		\'cssstyledeclaration': {'cssText Returns a text representation of the declaration block': 'cssText', 'length Returns the number of properties': 'length', 'parentRule Returns the containing CssRule ': 'parentRule', 'getPropertyPriority(property) Gets whether or not the property has the "important" priority': 'getPropertyPriority(property)', 'getPropertyValue(property) Gets the property value': 'getPropertyValue(property)', 'item(index) Gets the property name': 'item(index)', 'removeProperty(property) Gets the removed property value': 'removeProperty(property)', 'setProperty(property, value, priority) Set a CSS property for an element': 'setProperty(property, value, priority)'}, 
		\'history': {'length Returns the number of URLs in the history list': 'length', 'back() Loads the previous URL in the history list': 'back()', 'forward() Loads the next URL in the history list': 'forward()', 'go() Loads a specific URL from the history list': 'go()'}, 
		\'location': {'hash Sets or returns the anchor part (#) of a URL': 'hash', 'host Sets or returns the hostname and port number of a URL': 'host', 'hostname Sets or returns the hostname of a URL': 'hostname', 'href Sets or returns the entire URL': 'href', 'origin Returns the protocol, hostname and port number of a URL': 'origin', 'pathname Sets or returns the path name of a URL': 'pathname', 'port Sets or returns the port number of a URL': 'port', 'protocol Sets or returns the protocol of a URL': 'protocol', 'search Sets or returns the querystring part of a URL': 'search', 'assign() Loads a new document': 'assign()', 'reload() Reloads the current document': 'reload()', 'replace() Replaces the current document with a new one': 'replace()'}, 
		\'navigator': {'appCodeName Returns the code name of the browser': 'appCodeName', 'appName Returns the name of the browser': 'appName', 'appVersion Returns the version information of the browser': 'appVersion', 'cookieEnabled Determines whether cookies are enabled in the browser': 'cookieEnabled', 'geolocation Returns a Geolocation object that can be used to locate the user"s position': 'geolocation', 'language Returns the language of the browser': 'language', 'onLine Determines whether the browser is online': 'onLine', 'platform Returns for which platform the browser is compiled': 'platform', 'product Returns the engine name of the browser': 'product', 'userAgent Returns the user-agent header sent by the browser to     the server': 'userAgent', 'javaEnabled() Specifies whether or not the browser has Java enabled': 'javaEnabled()', 'taintEnabled() Removed in JavaScript version 1.2. Specifies whether the browser has data tainting enabled': 'taintEnabled()'}, 
		\'screen': {'availHeight Returns the height of the screen (excluding the Windows Taskbar)': 'availHeight', 'availWidth Returns the width of the screen (excluding the Windows Taskbar)': 'availWidth', 'colorDepth Returns the bit depth of the color palette for displaying images': 'colorDepth', 'height Returns the total height of the screen': 'height', 'pixelDepth Returns the color resolution (in bits per pixel) of the screen': 'pixelDepth', 'width Returns the total width of the screen': 'width'}, 
		\'window': {'closed Returns a Boolean value indicating whether a window has been closed or not': 'closed', 'defaultStatus Sets or returns the default text in the statusbar of a window': 'defaultStatus', 'document Returns the Document object for the window (See Document object)': 'document', 'frameElement Returns the <iframe> element in which the current window is inserted': 'frameElement', 'frames Returns all <iframe> elements in the current window': 'frames', 'history Returns the History object for the window (See History object)': 'history', 'innerHeight Returns the inner height of a window"s content area': 'innerHeight', 'innerWidth Returns the inner width of a window"s content area': 'innerWidth', 'length Returns the number of <iframe> elements in the current window': 'length', 'localStorage Returns a reference to the local storage object used to store data. Stores data with no expiration date': 'localStorage', 'location Returns the Location object for the window (See Location object)': 'location', 'name Sets or returns the name of a window': 'name', 'navigator Returns the Navigator object for the window (See Navigator object)': 'navigator', 'opener Returns a reference to the window that created the window': 'opener', 'outerHeight Returns the outer height of a window, including toolbars/scrollbars': 'outerHeight', 'outerWidth Returns the outer width of a window, including toolbars/scrollbars': 'outerWidth', 'pageXOffset Returns the pixels the current document has been scrolled (horizontally) from the upper left corner of the window': 'pageXOffset', 'pageYOffset Returns the pixels the current document has been scrolled (vertically) from the upper left corner of the window': 'pageYOffset', 'parent Returns the parent window of the current window': 'parent', 'screen Returns the Screen object for the window (See Screen object)': 'screen', 'screenLeft Returns the horizontal coordinate of the window relative to the screen': 'screenLeft', 'screenTop Returns the vertical coordinate of the window relative to the screen': 'screenTop', 'screenX Returns the horizontal coordinate of the window relative to the screen': 'screenX', 'screenY Returns the vertical coordinate of the window relative to the screen': 'screenY', 'sessionStorage Returns a reference to the local storage object used to store data. Stores data for one session (lost when the browser tab is closed)': 'sessionStorage', 'scrollX An alias of pageXOffset': 'scrollX', 'scrollY An alias of pageYOffset': 'scrollY', 'self Returns the current window': 'self', 'status Sets or returns the text in the statusbar of a window': 'status', 'top Returns the topmost browser window': 'top', 'alert() Displays an alert box with a message and an OK button': 'alert()', 'atob() Decodes a base-64 encoded string': 'atob()', 'blur() Removes focus from the current window': 'blur()', 'btoa() Encodes a string in base-64': 'btoa()', 'clearInterval() Clears a timer set with setInterval()': 'clearInterval()', 'clearTimeout() Clears a timer set with setTimeout()': 'clearTimeout()', 'close() Closes the current window': 'close()', 'confirm() Displays a dialog box with a message and an OK and a Cancel button': 'confirm()', 'createPopup() Creates a pop-up window': 'createPopup()', 'focus() Sets focus to the current window': 'focus()', 'getComputedStyle() Gets the current computed CSS styles applied to an element': 'getComputedStyle()', 'getSelection() Returns a Selection object representing the range of text selected by the user': 'getSelection()', 'matchMedia() Returns a MediaQueryList object representing the specified CSS media query string': 'matchMedia()', 'moveBy() Moves a window relative to its current position': 'moveBy()', 'moveTo() Moves a window to the specified position': 'moveTo()', 'open() Opens a new browser window': 'open()', 'print() Prints the content of the current window': 'print()', 'prompt() Displays a dialog box that prompts the visitor for input': 'prompt()', 'resizeBy() Resizes the window by the specified pixels': 'resizeBy()', 'resizeTo() Resizes the window to the specified width and height': 'resizeTo()', 'scroll() Deprecated. This method has been replaced by the scrollTo() method.': 'scroll()', 'scrollBy() Scrolls the document by the specified number of pixels': 'scrollBy()', 'scrollTo() Scrolls the document to the specified coordinates': 'scrollTo()', 'setInterval() Calls a function or evaluates an expression at specified intervals (in milliseconds)': 'setInterval()', 'setTimeout() Calls a function or evaluates an expression after a specified number of milliseconds': 'setTimeout()', 'stop() Stops the window from loading': 'stop()'}}
	return self.pickL(objj)
endfunction

XPT obj
XSET met.pre=met
`met^NextC($_xJsObjects)^
