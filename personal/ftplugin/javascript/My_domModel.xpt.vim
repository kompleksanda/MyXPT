XPTemplate priority=lang

let s:f = g:XPTfuncs()

fun! s:f._xDomObj()
	let all={'abbr': {}, 
		\'address': {}, 
		\'all': {
			\'accessKey Sets or returns the accesskey attribute of an element': 'accessKey', 'addEventListener() Attaches an event handler to the specified element': 'addEventListener()', 'appendChild() Adds a new child node, to an element, as the last child node': 'appendChild()', 'attributes Returns a NamedNodeMap of an element"s attributes': 'attributes', 'blur() Removes focus from an element': 'blur()', 'childElementCount Returns the number of child elements an element has': 'childElementCount', 'childNodes Returns a collection of an element"s child nodes (including text and comment nodes)': 'childNodes', 'children Returns a collection of an element"s child element (excluding text and comment nodes)': 'children', 'classList Returns the class name(s) of an element': 'classList', 'className Sets or returns the value of the class attribute of an element': 'className', 'click() Simulates a mouse-click on an element': 'click()', 'clientHeight Returns the height of an element, including padding': 'clientHeight', 'clientLeft Returns the width of the left border of an element': 'clientLeft', 'clientTop Returns the width of the top border of an element': 'clientTop', 'clientWidth Returns the width of an element, including padding': 'clientWidth', 'cloneNode() Clones an element': 'cloneNode()', 'compareDocumentPosition() Compares the document position of two elements': 'compareDocumentPosition()', 'contains() Returns true if a node is a descendant of a node, otherwise false': 'contains()', 'contentEditable Sets or returns whether the content of an element is editable or not': 'contentEditable', 'dir Sets or returns the value of the dir attribute of an element': 'dir', 'firstChild Returns the first child node of an element': 'firstChild', 'firstElementChild Returns the first child element of an element': 'firstElementChild', 'focus() Gives focus to an element': 'focus()', 'getAttribute() Returns the specified attribute value of an element node': 'getAttribute()', 'getAttributeNode() Returns the specified attribute node': 'getAttributeNode()', 'getElementsByClassName() Returns a collection of all child elements with the specified class name': 'getElementsByClassName()', 'getElementsByTagName() Returns a collection of all child elements with the specified tag name': 'getElementsByTagName()', 'getFeature() Returns an object which implements the APIs of a specified feature': 'getFeature()', 'hasAttribute() Returns true if an element has the specified attribute, otherwise false': 'hasAttribute()', 'hasAttributes() Returns true if an element has any attributes, otherwise false': 'hasAttributes()', 'hasChildNodes() Returns true if an element has any child nodes, otherwise false': 'hasChildNodes()', 'id Sets or returns the value of the id attribute of an element': 'id', 'innerHTML Sets or returns the content of an element': 'innerHTML', 'insertBefore() Inserts a new child node before a specified, existing, child node': 'insertBefore()', 'isContentEditable Returns true if the content of an element is editable, otherwise false': 'isContentEditable', 'isDefaultNamespace() Returns true if a specified namespaceURI is the default, otherwise false': 'isDefaultNamespace()', 'isEqualNode() Checks if two elements are equal': 'isEqualNode()', 'isSameNode() Checks if two elements are the same node': 'isSameNode()', 'isSupported() Returns true if a specified feature is supported on the element': 'isSupported()', 'lang Sets or returns the value of the lang attribute of an element': 'lang', 'lastChild Returns the last child node of an element': 'lastChild', 'lastElementChild Returns the last child element of an element': 'lastElementChild', 'namespaceURI Returns the namespace URI of an element': 'namespaceURI', 'nextSibling Returns the next node at the same node tree level': 'nextSibling', 'nextElementSibling Returns the next element at the same node tree level': 'nextElementSibling', 'nodeName Returns the name of a node': 'nodeName', 'nodeType Returns the node type of a node': 'nodeType', 'nodeValue Sets or returns the value of a node': 'nodeValue', 'normalize() Joins adjacent text nodes and removes empty text nodes in an  element': 'normalize()', 'offsetHeight Returns the height of an element, including padding, border and scrollbar': 'offsetHeight', 'offsetWidth Returns the width of an element, including padding, border and scrollbar': 'offsetWidth', 'offsetLeft Returns the horizontal offset position of an element': 'offsetLeft', 'offsetParent Returns the offset container of an element': 'offsetParent', 'offsetTop Returns the vertical offset position of an element': 'offsetTop', 'ownerDocument Returns the root element (document object) for an element': 'ownerDocument', 'parentNode Returns the parent node of an element': 'parentNode', 'parentElement Returns the parent element node of an element': 'parentElement', 'previousSibling Returns the previous node at the same node tree level': 'previousSibling', 'previousElementSibling Returns the previous element at the same node tree level': 'previousElementSibling', 'querySelector() Returns the first child element that matches a specified CSS selector(s) of an element': 'querySelector()', 'querySelectorAll() Returns all child elements that matches a specified CSS selector(s) of an element': 'querySelectorAll()', 'removeAttribute() Removes a specified attribute from an element': 'removeAttribute()', 'removeAttributeNode() Removes a specified attribute node, and returns the removed node': 'removeAttributeNode()', 'removeChild() Removes a child node from an element': 'removeChild()', 'replaceChild() Replaces a child node in an element': 'replaceChild()', 'removeEventListener() Removes an event handler that has been attached with the addEventListener() method': 'removeEventListener()', 'scrollHeight Returns the entire height of an element, including padding': 'scrollHeight', 'scrollLeft Sets or returns the number of pixels an element"s content is scrolled horizontally': 'scrollLeft', 'scrollTop Sets or returns the number of pixels an element"s content is scrolled vertically': 'scrollTop', 'scrollWidth Returns the entire width of an element, including padding': 'scrollWidth', 'setAttribute() Sets or changes the specified attribute, to the specified value': 'setAttribute()', 'setAttributeNode() Sets or changes the specified attribute node': 'setAttributeNode()', 'style Sets or returns the value of the style attribute of an element': 'style', 'tabIndex Sets or returns the value of the tabindex attribute of an element': 'tabIndex', 'tagName Returns the tag name of an element': 'tagName', 'textContent Sets or returns the textual content of a node and its descendants': 'textContent', 'title Sets or returns the value of the title attribute of an element': 'title', 'toString() Converts an element to a string': 'toString()', '\xa0 \xa0': '\xa0', 'nodelist.item() Returns the node at the specified index in a NodeList': 'nodelist.item()', 'nodelist.length Returns the number of nodes in a NodeList': 'nodelist.length'}, 
		\'anchor': {'charset Not supported in HTML5. Sets or returns the value of the charset attribute of a link': 'charset', 'download Sets or returns the value of the download attribute of a link': 'download', 'hash Sets or returns the anchor part of the href attribute value': 'hash', 'host Sets or returns the hostname and port part of the href attribute value': 'host', 'hostname Sets or returns the hostname part of the href attribute value': 'hostname', 'href Sets or returns the value of the href attribute of a link': 'href', 'hreflang Sets or returns the value of the hreflang attribute of a link': 'hreflang', 'origin Returns the protocol, hostname and port part of the href attribute value': 'origin', 'name Not supported in HTML5. Use id instead.Sets or returns the value of the name attribute of a link': 'name', 'password Sets or returns the password part of the href attribute value': 'password', 'pathname Sets or returns the pathname part of the href attribute value': 'pathname', 'port Sets or returns the port part of the href attribute value': 'port', 'protocol Sets or returns the protocol part of the href attribute value': 'protocol', 'rel Sets or returns the value of the rel attribute of a link': 'rel', 'rev Not supported in HTML5. Sets or returns the value of the rev attribute of a link': 'rev', 'search Sets or returns the querystring part of the href attribute value': 'search', 'target Sets or returns the value of the target attribute of a link': 'target', 'text Sets or returns the text content of a link': 'text', 'type Sets or returns the value of the type attribute of a link': 'type', 'username Sets or returns the username part of the href attribute value': 'username'}, 
		\'area': {'alt Sets or returns the value of the alt attribute of an area': 'alt', 'coords Sets or returns the value of the coords attribute of an area': 'coords', 'hash Sets or returns the anchor part of the href attribute value': 'hash', 'host Sets or returns the hostname and port part of the href attribute value': 'host', 'hostname Sets or returns the hostname part of the href attribute value': 'hostname', 'href Sets or returns the value of the href attribute of an area': 'href', 'noHref Not supported in HTML5. Sets or returns the value of the nohref attribute of an area': 'noHref', 'origin Returns the protocol, hostname and port part of the href attribute value': 'origin', 'password Sets or returns the password part of the href attribute value': 'password', 'pathname Sets or returns the pathname part of the href attribute value': 'pathname', 'port Sets or returns the port part of the href attribute value': 'port', 'protocol Sets or returns the protocol part of the href attribute value': 'protocol', 'search Sets or returns the querystring part of the href attribute value': 'search', 'shape Sets or returns the value of the shape attribute of an area': 'shape', 'target Sets or returns the value of the target attribute of an area': 'target', 'username Sets or returns the username part of the href attribute value': 'username'}, 
		\'article': {}, 
		\'aside': {}, 
		\'attributes': {'attr.isId Returns true if the attribute is of type Id, otherwise it returns false': 'attr.isId', 'attr.name Returns the name of an attribute': 'attr.name', 'attr.value Sets or returns the value of the attribute': 'attr.value', 'attr.specified Returns true if the attribute has been specified, otherwise it returns false': 'attr.specified', '\xa0 \xa0': '\xa0', 'nodemap.getNamedItem() Returns a specified attribute node from a NamedNodeMap': 'nodemap.getNamedItem()', 'nodemap.item() Returns the attribute node at a specified index in a NamedNodeMap': 'nodemap.item()', 'nodemap.length Returns the number of attribute nodes in a NamedNodeMap': 'nodemap.length', 'nodemap.removeNamedItem() Removes a specified attribute node': 'nodemap.removeNamedItem()', 'nodemap.setNamedItem() Sets the specified attribute node (by name)': 'nodemap.setNamedItem()', 'attr.appendChild() Attributes don"t have child nodes': 'attr.appendChild()', 'attr.attributes Attributes don"t have attributes': 'attr.attributes', 'attr.baseURI use document.baseURI instead': 'attr.baseURI', 'attr.childNodes Attributes don"t have child nodes': 'attr.childNodes', 'attr.cloneNode() Get or set the attr.value instead': 'attr.cloneNode()', 'attr.firstChild Attributes don"t have child nodes': 'attr.firstChild', 'attr.hasAttributes() Attributes don"t have attributes': 'attr.hasAttributes()', 'attr.hasChildNodes Attributes don"t have child nodes': 'attr.hasChildNodes', 'attr.insertBefore() Attributes don"t have child nodes': 'attr.insertBefore()', 'attr.isEqualNode() Makes no sense': 'attr.isEqualNode()', 'attr.isSameNode() Makes no sense': 'attr.isSameNode()', 'attr.isSupported() Is always true': 'attr.isSupported()', 'attr.lastChild Attributes don"t have child nodes': 'attr.lastChild', 'attr.nextSibling Attributes don"t have siblings': 'attr.nextSibling', 'attr.nodeName Use attr.name instead': 'attr.nodeName', 'attr.nodeType This is always 2 (ATTRIBUTE_NODE) ': 'attr.nodeType', 'attr.nodeValue Use attr.value instead': 'attr.nodeValue', 'attr.normalize() Attributes cannot be normalized': 'attr.normalize()', 'attr.ownerDocument This is always your HTML document': 'attr.ownerDocument', 'attr.ownerElement This is the HTML element you used to access the attribute': 'attr.ownerElement', 'attr.parentNode This is the HTML element you used to access the attribute': 'attr.parentNode', 'attr.previousSibling Attributes don"t have siblings': 'attr.previousSibling', 'attr.removeChild Attributes don"t have child nodes': 'attr.removeChild', 'attr.replaceChild Attributes don"t have child nodes': 'attr.replaceChild', 'attr.textContent Use attr.value instead': 'attr.textContent'}, 
		\'audio': {'audioTracks Returns an AudioTrackList object representing available audio tracks': 'audioTracks', 'autoplay Sets or returns whether the audio should start playing as soon as it is ready': 'autoplay', 'buffered Returns a TimeRanges object representing the buffered parts of an audio': 'buffered', 'controller Returns the MediaController object representing the current media controller of an audio': 'controller', 'controls Sets or returns whether an audio should have controls displayed (play/pause etc)': 'controls', 'crossOrigin Sets or returns the CORS settings of an audio': 'crossOrigin', 'currentSrc Returns the URL of the current audio': 'currentSrc', 'currentTime Sets or returns the current playback position in an audio (in seconds)': 'currentTime', 'defaultMuted Sets or returns whether the audio should be muted by default': 'defaultMuted', 'defaultPlaybackRate Sets or returns whether the default playback speed of the audio': 'defaultPlaybackRate', 'duration Returns the length of an audio(in seconds)': 'duration', 'ended Returns whether the playback of the audio has ended': 'ended', 'error Returns a MediaError object representing the error state of the audio': 'error', 'loop Sets or returns whether the audio should start playing over again, every time it is finished': 'loop', 'mediaGroup Sets or returns the name of the media group the audio(s) is a part of': 'mediaGroup', 'muted Sets or returns whether the sound should be turned off': 'muted', 'networkState Returns the current network state of an audio': 'networkState', 'paused Sets or returns whether an audio is paused': 'paused', 'playbackRate Sets or returns the speed of the audio playback': 'playbackRate', 'played Returns a TimeRanges object representing the played parts of the audio': 'played', 'preload Sets or returns the value of the preload attribute of an audio': 'preload', 'readyState Returns the current ready state of an audio': 'readyState', 'seekable Returns a TimeRanges object representing the seekable parts of an audio': 'seekable', 'seeking Returns whether the user is currently seeking in the audio': 'seeking', 'src Sets or returns the value of the src attribute of an audio': 'src', 'textTracks Returns a TextTrackList object representing the available text tracks': 'textTracks', 'volume Sets or returns the audio volume of an audio': 'volume', 'addTextTrack() Adds a new text track to the audio': 'addTextTrack()', 'canPlayType() Checks whether the browser can play the specified audio type': 'canPlayType()', 'fastSeek() Seeks to a specified time in the audio player': 'fastSeek()', 'getStartDate() Returns a new Date object, representing the current timeline offset': 'getStartDate()', 'load() Re-loads the audio element': 'load()', 'play() Starts playing the audio': 'play()', 'pause() Pauses the currently playing audio': 'pause()'}, 
		\'b': {}, 
		\'base': {}, 
		\'bdo': {'dir Sets or returns the value of the dir attribute of a <bdo> element': 'dir'}, 
		\'blockquote': {'cite Sets or returns the value of the cite attribute of a quotation': 'cite'}, 
		\'body': {'aLink Not supported in HTML5. See CSS :active Selector instead.Sets or returns the color of an active link in a document': 'aLink', 'background Not supported in HTML5. Use style.backgroundImage instead.    Sets or returns the background image for a document': 'background', 'bgColor Not supported in HTML5. Use style.backgroundColor instead.    Sets or returns the background color of a document': 'bgColor', 'link Not supported in HTML5. See CSS :link Selector instead. Sets or returns the color of unvisited links in a document': 'link', 'text Not supported in HTML5. Use style.color instead.    Sets or returns the color of the text in a document': 'text', 'vLink Not supported in HTML5. See CSS :visited Selector instead.Sets or returns the color of visited links in a document': 'vLink'}, 
		\'br': {'clear Not supported in HTML5. Use style.clear instead.Sets or returns the flow of text around floating objects': 'clear'}, 
		\'button': {'autofocus Sets or returns whether an input button should automatically get focus when the page loads': 'autofocus', 'defaultValue Sets or returns the default value of an input button': 'defaultValue', 'disabled Sets or returns whether an input button is disabled, or not': 'disabled', 'form Returns a reference to the form that contains the input button': 'form', 'name Sets or returns the value of the name attribute of an input button': 'name', 'type Returns which type of form element the input button is': 'type', 'value Sets or returns the value of the value attribute of an input button': 'value'}, 
		\'canvas': {'fillStyle Sets or returns the color, gradient, or pattern used to fill the drawing': 'fillStyle', 'strokeStyle Sets or returns the color, gradient, or pattern used for strokes': 'strokeStyle', 'shadowColor Sets or returns the color to use for shadows': 'shadowColor', 'shadowBlur Sets or returns the blur level for shadows': 'shadowBlur', 'shadowOffsetX Sets or returns the horizontal distance of the shadow from the shape': 'shadowOffsetX', 'shadowOffsetY Sets or returns the vertical distance of the shadow from the shape': 'shadowOffsetY', 'createLinearGradient() Creates a linear gradient (to use on canvas content)': 'createLinearGradient()', 'createPattern() Repeats a specified element in the specified direction': 'createPattern()', 'createRadialGradient() Creates a radial/circular gradient (to use on canvas content)': 'createRadialGradient()', 'addColorStop() Specifies the colors and stop positions in a gradient object': 'addColorStop()', 'lineCap Sets or returns the style of the end caps for a line': 'lineCap', 'lineJoin Sets or returns the type of corner created, when two lines meet': 'lineJoin', 'lineWidth Sets or returns the current line width': 'lineWidth', 'miterLimit Sets or returns the maximum miter length': 'miterLimit', 'rect() Creates a rectangle': 'rect()', 'fillRect() Draws a "filled" rectangle': 'fillRect()', 'strokeRect() Draws a rectangle (no fill)': 'strokeRect()', 'clearRect() Clears the specified pixels within a given rectangle': 'clearRect()', 'fill() Fills the current drawing (path)': 'fill()', 'stroke() Actually draws the path you have defined': 'stroke()', 'beginPath() Begins a path, or resets the current path': 'beginPath()', 'moveTo() Moves the path to the specified point in the canvas, without creating a line': 'moveTo()', 'closePath() Creates a path from the current point back to the starting point': 'closePath()', 'lineTo() Adds a new point and creates a line from that point to the last specified point in the canvas': 'lineTo()', 'clip() Clips a region of any shape and size from the original canvas': 'clip()', 'quadraticCurveTo() Creates a quadratic Bézier curve': 'quadraticCurveTo()', 'bezierCurveTo() Creates a cubic Bézier curve': 'bezierCurveTo()', 'arc() Creates an arc/curve (used to create circles, or parts of circles)': 'arc()', 'arcTo() Creates an arc/curve between two tangents': 'arcTo()', 'isPointInPath() Returns true if the specified point is in the current path, otherwise false': 'isPointInPath()', 'scale() Scales the current drawing bigger or smaller': 'scale()', 'rotate() Rotates the current drawing': 'rotate()', 'translate() Remaps the (0,0) position on the canvas': 'translate()', 'transform() Replaces the current transformation matrix for the drawing': 'transform()', 'setTransform() Resets the current transform to the identity matrix. Then runs transform()': 'setTransform()', 'font Sets or returns the current font properties for text content': 'font', 'textAlign Sets or returns the current alignment for text content': 'textAlign', 'textBaseline Sets or returns the current text baseline used when drawing text': 'textBaseline', 'fillText() Draws "filled" text on the canvas': 'fillText()', 'strokeText() Draws text on the canvas (no fill)': 'strokeText()', 'measureText() Returns an object that contains the width of the specified text': 'measureText()', 'drawImage() Draws an image, canvas, or video onto the canvas': 'drawImage()', 'width Returns the width of an ImageData object': 'width', 'height Returns the height of an ImageData object': 'height', 'data Returns an object that contains image data of a specified ImageData object': 'data', 'createImageData() Creates a new, blank ImageData object': 'createImageData()', 'getImageData() Returns an ImageData object that copies the pixel data for the specified rectangle on a canvas': 'getImageData()', 'putImageData() Puts the image data (from a specified ImageData object) back onto the canvas': 'putImageData()', 'globalAlpha Sets or returns the current alpha or transparency value of the drawing': 'globalAlpha', 'globalCompositeOperation Sets or returns how a new image are drawn onto an existing image': 'globalCompositeOperation', 'save() Saves the state of the current context': 'save()', 'restore() Returns previously saved path state and attributes': 'restore()', 'createEvent() \xa0': 'createEvent()', 'getContext() \xa0': 'getContext()', 'toDataURL() \xa0': 'toDataURL()'}, 
		\'caption': {'align Not supported in HTML5. Usestyle.textAlign orstyle.captionSide instead.Sets or returns the alignment of the caption': 'align'}, 
		\'checkbox': {'autofocus Sets or returns whether a checkbox should automatically get focus when the page loads': 'autofocus', 'checked Sets or returns the checked state of a checkbox': 'checked', 'defaultChecked Returns the default value of the checked attribute': 'defaultChecked', 'defaultValue Sets or returns the default value of a checkbox': 'defaultValue', 'disabled Sets or returns whether a checkbox is disabled, or not': 'disabled', 'form Returns a reference to the form that contains the checkbox': 'form', 'indeterminate Sets or returns the indeterminate state of the checkbox': 'indeterminate', 'name Sets or returns the value of the name attribute of a checkbox': 'name', 'required Sets or returns whether the checkbox must be checked before submitting a form': 'required', 'type Returns which type of form element the checkbox is': 'type', 'value Sets or returns the value of the value attribute of a checkbox': 'value'}, 
		\'cite': {}, 
		\'code': {}, 
		\'col': {'span Sets or returns the value of the span attribute of a column': 'span'}, 
		\'colgroup': {'span Sets or returns the value of the span attribute of a column group': 'span'}, 
		\'color': {'autocomplete Sets or returns the value of the autocomplete attribute of a color picker': 'autocomplete', 'autofocus Sets or returns whether a color picker should automatically get focus when the page loads': 'autofocus', 'defaultValue Sets or returns the default value of a color picker': 'defaultValue', 'disabled Sets or returns whether a color picker is disabled, or not': 'disabled', 'form Returns a reference to the form that contains the color picker': 'form', 'list Returns a reference to the <datalist> element that contains the color picker': 'list', 'name Sets or returns the value of the name attribute of a color picker': 'name', 'type Returns which type of form element the color picker is': 'type', 'value Sets or returns the value of the value attribute of a color picker': 'value'}, 
		\'datalist': {'options Returns a collection of all the options in a datalist': 'options'}, 
		\'date': {'autocomplete Sets or returns the value of the autocomplete attribute of a date field': 'autocomplete', 'autofocus Sets or returns whether a date field should automatically get focus when the page loads': 'autofocus', 'defaultValue Sets or returns the default value of a date field': 'defaultValue', 'disabled Sets or returns whether a date field is disabled, or not': 'disabled', 'form Returns a reference to the form that contains the date field': 'form', 'list Returns a reference to the datalist that contains the date field': 'list', 'max Sets or returns the value of the max attribute of the date field': 'max', 'min Sets or returns the value of the min attribute of the date field': 'min', 'name Sets or returns the value of the name attribute of a date field': 'name', 'readOnly Sets or returns whether the date field is read-only, or not': 'readOnly', 'required Sets or returns whether the date field must be filled out before submitting a form': 'required', 'step Sets or returns the value of the step attribute of the date field': 'step', 'type Returns which type of form element the date field is': 'type', 'value Sets or returns the value of the value attribute of a date field': 'value', 'stepDown() Decrements the value of the date field by a specified number': 'stepDown()', 'stepUp() Increments the value of the date field by a specified number': 'stepUp()'}, 
		\'datetime-local': {'autocomplete Sets or returns the value of the autocomplete attribute of a local datetime field': 'autocomplete', 'autofocus Sets or returns whether a local datetime field should automatically get focus upon page load': 'autofocus', 'defaultValue Sets or returns the default value of a local datetime field': 'defaultValue', 'disabled Sets or returns whether a local datetime field is disabled, or not': 'disabled', 'form Returns a reference to the form that contains the local datetime field': 'form', 'list Returns a reference to the datalist that contains the local datetime field': 'list', 'max Sets or returns the value of the max attribute of the local datetime field': 'max', 'min Sets or returns the value of the min attribute of the local datetime field': 'min', 'name Sets or returns the value of the name attribute of a local datetime field': 'name', 'readOnly Sets or returns whether the local datetime field is read-only, or not': 'readOnly', 'required Sets or returns whether the local datetime field must be filled out before submitting a form': 'required', 'step Sets or returns the value of the step attribute of the local datetime field': 'step', 'type Returns which type of form element the local datetime field is': 'type', 'value Sets or returns the value of the value attribute of a local datetime field': 'value', 'stepDown() Decrements the value of the datetime field by a specified number': 'stepDown()', 'stepUp() Increments the value of the datetime field by a specified number': 'stepUp()'}, 
		\'datetime': {'autocomplete Sets or returns the value of the autocomplete attribute of a datetime field': 'autocomplete', 'autofocus Sets or returns whether a datetime field should automatically get focus when the page loads': 'autofocus', 'defaultValue Sets or returns the default value of a datetime field': 'defaultValue', 'disabled Sets or returns whether a datetime field is disabled, or not': 'disabled', 'form Returns a reference to the form that contains the datetime field': 'form', 'list Returns a reference to the datalist that contains the datetime field': 'list', 'max Sets or returns the value of the max attribute of the datetime field': 'max', 'min Sets or returns the value of the min attribute of the datetime field': 'min', 'name Sets or returns the value of the name attribute of a datetime field': 'name', 'readOnly Sets or returns whether the datetime field is read-only, or not': 'readOnly', 'required Sets or returns whether the datetime field must be filled out before submitting a form': 'required', 'step Sets or returns the value of the step attribute of the datetime field': 'step', 'type Returns which type of form element the datetime field is': 'type', 'value Sets or returns the value of the value attribute of a datetime field': 'value', 'stepDown() Decrements the value of the datetime field by a specified number': 'stepDown()', 'stepUp() Increments the value of the datetime field by a specified number': 'stepUp()'}, 
		\'dd': {}, 
		\'del': {'cite Sets or returns the value of the cite attribute of a deleted text': 'cite', 'dateTime Sets or returns the value of the datetime attribute of a deleted text': 'dateTime'}, 
		\'details': {'open Sets or returns whether the details should be visible (open) to the user, or not': 'open'}, 
		\'dfn': {}, 
		\'dialog': {'open Sets or returns whether a dialog should be open or not': 'open', 'returnValue Sets or returns the dialog"s return value': 'returnValue', 'close() Closes the dialog': 'close()', 'show() Shows the dialog': 'show()', 'showModal() Shows the dialog and makes it the top-most modal dialog': 'showModal()'}, 
		\'div': {'align Not supported in HTML5. Usestyle.textAlign instead.Sets or returns the value of the align attribute of the <div> element': 'align'}, 
		\'dl': {}, 
		\'document': {'document.activeElement Returns the currently focused element in the document': '`document^.activeElement', 'document.addEventListener() Attaches an event handler to the document': '`document^.addEventListener()', 'document.adoptNode() Adopts a node from another document': '`document^.adoptNode()', 'document.anchors Returns a collection of all <a> elements in the document that have a name attribute': '`document^.anchors', 'document.applets Returns a collection of all <applet> elements in the document': '`document^.applets', 'document.baseURI Returns the absolute base URI of a document': '`document^.baseURI', 'document.body Sets or returns the document"s body (the <body> element)': '`document^.body', 'document.close() Closes the output stream previously opened with document.open()': '`document^.close()', 'document.cookie Returns all name/value pairs of cookies in the document': '`document^.cookie', 'document.createAttribute() Creates an attribute node': '`document^.createAttribute()', 'document.createComment() Creates a Comment node with the specified text': '`document^.createComment()', 'document.createDocumentFragment() Creates an empty DocumentFragment node': '`document^.createDocumentFragment()', 'document.createElement() Creates an Element node': '`document^.createElement()', 'document.createTextNode() Creates a Text node': '`document^.createTextNode()', 'document.doctype Returns the Document Type Declaration associated with the document': '`document^.doctype', 'document.documentElement Returns the Document Element of the document (the <html> element)': '`document^.documentElement', 'document.documentMode Returns the mode used by the browser to render the document': '`document^.documentMode', 'document.documentURI Sets or returns the location of the document': '`document^.documentURI', 'document.domain Returns the domain name of the server that loaded the document': '`document^.domain', 'document.domConfig Obsolete. Returns the DOM configuration of the document': '`document^.domConfig', 'document.embeds Returns a collection of all <embed> elements the document': '`document^.embeds', 'document.forms Returns a collection of all <form> elements in the document': '`document^.forms', 'document.getElementById() Returns the element that has the ID attribute with the specified value': '`document^.getElementById()', 'document.getElementsByClassName() Returns a NodeList containing all elements with the specified class name': '`document^.getElementsByClassName()', 'document.getElementsByName() Returns a NodeList containing all elements with a specified name': '`document^.getElementsByName()', 'document.getElementsByTagName() Returns a NodeList containing all elements with the specified tag name': '`document^.getElementsByTagName()', 'document.hasFocus() Returns a Boolean value indicating whether the document has focus': '`document^.hasFocus()', 'document.head Returns the <head> element of the document': '`document^.head', 'document.images Returns a collection of all <img> elements in the document': '`document^.images', 'document.implementation Returns the DOMImplementation object that handles this document': '`document^.implementation', 'document.importNode() Imports a node from another document': '`document^.importNode()', 'document.inputEncoding Returns the encoding, character set, used for the document': '`document^.inputEncoding', 'document.lastModified Returns the date and time the document was last modified': '`document^.lastModified', 'document.links Returns a collection of all <a> and <area> elements in the document that have a href attribute': '`document^.links', 'document.normalize() Removes empty Text nodes, and joins adjacent nodes': '`document^.normalize()', 'document.normalizeDocument() Removes empty Text nodes, and joins adjacent nodes': '`document^.normalizeDocument()', 'document.open() Opens an HTML output stream to collect output from document.write()': '`document^.open()', 'document.querySelector() Returns the first element that matches a specified CSS selector(s) in the document': '`document^.querySelector()', 'document.querySelectorAll() Returns a static NodeList containing all elements that matches a specified CSS selector(s) in the document': '`document^.querySelectorAll()', 'document.readyState Returns the (loading) status of the document': '`document^.readyState', 'document.referrer Returns the URL of the document that loaded the current document': '`document^.referrer', 'document.removeEventListener() Removes an event handler from the document (that has been attached with the addEventListener() method)': '`document^.removeEventListener()', 'document.renameNode() Renames the specified node': '`document^.renameNode()', 'document.scripts Returns a collection of <script> elements in the document': '`document^.scripts', 'document.strictErrorChecking Sets or returns whether error-checking is enforced or not': '`document^.strictErrorChecking', 'document.title Sets or returns the title of the document': '`document^.title', 'document.URL Returns the full URL of the HTML document': '`document^.URL', 'document.write() Writes HTML expressions or JavaScript code to a document': '`document^.write()', 'document.writeln() Same as write(), but adds a newline character after each statement': '`document^.writeln()', 'document.attributes Documents don"t have attributes': '`document^.attributes', 'document.hasAttributes() Documents don"t have attributes': '`document^.hasAttributes()', 'document.nextSibling Documents don"t have siblings': '`document^.nextSibling', 'document.nodeName This is always #document': '`document^.nodeName', 'document.nodeType This is always 9 (DOCUMENT_NODE) ': '`document^.nodeType', 'document.nodeValue Documents don"t have an node value': '`document^.nodeValue', 'document.ownerDocument Documents don"t have an owner document': '`document^.ownerDocument', 'document.ownerElement Documents don"t have an owner element': '`document^.ownerElement', 'document.parentNode Documents don"t have a parent node': '`document^.parentNode', 'document.previousSibling Documents don"t have siblings': '`document^.previousSibling', 'document.textContent Documents don"t have a text content': '`document^.textContent'}, 
		\'dt': {}, 
		\'em': {}, 
		\'email': {'autocomplete Sets or returns the value of the autocomplete attribute of an email field': 'autocomplete', 'autofocus Sets or returns whether an email field should automatically get focus when the page loads': 'autofocus', 'defaultValue Sets or returns the default value of an email field': 'defaultValue', 'disabled Sets or returns whether an email field is disabled, or not': 'disabled', 'form Returns a reference to the form that contains the email field': 'form', 'list Returns a reference to the datalist that contains the email field': 'list', 'maxLength Sets or returns the value of the maxlength attribute of an email field': 'maxLength', 'multiple Sets or returns whether a user is allowed to enter more than one email address in the email field': 'multiple', 'name Sets or returns the value of the name attribute of an email field': 'name', 'pattern Sets or returns the value of the pattern attribute of an email field': 'pattern', 'placeholder Sets or returns the value of the placeholder attribute of an email field': 'placeholder', 'readOnly Sets or returns whether the email field is read-only, or not': 'readOnly', 'required Sets or returns whether the email field must be filled out before submitting a form': 'required', 'size Sets or returns the value of the size attribute of the email field': 'size', 'type Returns which type of form element the email field is': 'type', 'value Sets or returns the value of the value attribute of an email field': 'value'}, 
		\'embed': {'height Sets or returns the value of the height attribute in an embed element': 'height', 'src Sets or returns the value of the src attribute in an embed element': 'src', 'type Sets or returns the value of the type attribute in an embed element': 'type', 'width Sets or returns the value of the width attribute in an embed element': 'width'}, 
		\'event': {}, 
		\'fieldset': {'disabled Sets or returns whether a fieldset is disabled, or not': 'disabled', 'form Returns a reference to the form that contains the fieldset': 'form', 'name Sets or returns the value of the name attribute of a fieldset': 'name', 'type Returns which type of form element the fieldset is': 'type'}, 
		\'figcaption': {}, 
		\'figure': {}, 
		\'fileupload': {'accept Sets or returns the value of the accept attribute of the file upload button': 'accept', 'autofocus Sets or returns whether a file upload button should automatically get focus upon page load': 'autofocus', 'defaultValue Sets or returns the default value of the file upload button': 'defaultValue', 'disabled Sets or returns whether the file upload button is disabled, or not': 'disabled', 'files Returns a FileList object that represents the file or files selected with the file upload button': 'files', 'form Returns a reference to the form that contains the file upload button': 'form', 'multiple Sets or returns whether a user is allowed to select more than one file in the file upload field': 'multiple', 'name Sets or returns the value of the name attribute of the file upload button': 'name', 'required Sets or returns whether a file in the file upload field must be selected before submitting a form': 'required', 'type Returns which type of form element the file upload button is': 'type', 'value Returns the path or the name of the selected file': 'value'}, 
		\'footer': {}, 
		\'form': {'elements Returns a collection of all elements in a form': 'elements', 'acceptCharset Sets or returns the value of the accept-charset attribute in a form': 'acceptCharset', 'action Sets or returns the value of the action attribute in a form': 'action', 'autocomplete Sets or returns the value of the autocomplete attribute in a form': 'autocomplete', 'encoding Alias of enctype': 'encoding', 'enctype Sets or returns the value of the enctype attribute in a form': 'enctype', 'length Returns the number of elements in a form': 'length', 'method Sets or returns the value of the method attribute in a form': 'method', 'name Sets or returns the value of the name attribute in a form': 'name', 'noValidate Sets or returns whether the form-data should be validated or not, on submission': 'noValidate', 'target Sets or returns the value of the target attribute in a form': 'target', 'reset() Resets a form': 'reset()', 'submit() Submits a form': 'submit()'}, 
		\'frame': {'align Not supported in HTML5. Use style.cssFloat instead. Sets or returns the value of the align attribute in an iframe': 'align', 'contentDocument Returns the document object generated by an iframe': 'contentDocument', 'contentWindow Returns the window object generated by an iframe': 'contentWindow', 'frameBorder Not supported in HTML5. Usestyle.border instead. Sets or returns the value of the frameborder attribute in an iframe': 'frameBorder', 'height Sets or returns the value of the height attribute in an iframe': 'height', 'longDesc Not supported in HTML5. Sets or returns the value of the longdesc attribute in an iframe': 'longDesc', 'marginHeight Not supported in HTML5. Use style.margin instead. Sets or returns the value of the marginheight attribute in an iframe': 'marginHeight', 'marginWidth Not supported in HTML5. Use style.margin  instead. Sets or returns the value of the marginwidth attribute in an iframe': 'marginWidth', 'name Sets or returns the value of the name attribute in an iframe': 'name', 'sandbox Returns the value of the sandbox attribute in an iframe': 'sandbox', 'scrolling Not supported in HTML5. Sets or returns the value of the scrolling attribute in an iframe': 'scrolling', 'seamless Sets or returns whether an iframe should look like it is a part of the containing document (no borders or scrollbars), or not': 'seamless', 'src Sets or returns the value of the src attribute in an iframe': 'src', 'srcdoc Sets or returns the value of the srcdoc attribute in an iframe': 'srcdoc', 'width Sets or returns the value of the width attribute in an iframe': 'width'}, 
		\'head': {}, 
		\'header': {}, 
		\'heading': {'align Not supported in HTML5. Usestyle.textAlign instead.Sets or returns the value of the align attribute of the heading element': 'align'}, 
		\'hidden': {'defaultValue Sets or returns the default value of the hidden input field': 'defaultValue', 'form Returns a reference to the form that contains the hidden input field': 'form', 'name Sets or returns the value of the name attribute of the hidden input field': 'name', 'type Returns which type of form element a hidden input field is': 'type', 'value Sets or returns the value of the value attribute of the hidden input field': 'value'}, 
		\'hr': {'align Not supported in HTML5. Use style.textAlign instead.    Sets or returns the alignment of a horizontal line': 'align', 'color Not supported in HTML5. Use style.color instead.    Sets or returns the color of a horizontal line': 'color', 'noshade Not supported in HTML5.    Sets or returns whether a horizontal line should render in one solid color (noshaded)': 'noshade', 'size Not supported in HTML5. Use style.height instead.    Sets or returns the height of a horizontal line': 'size', 'width Not supported in HTML5. Use style.width instead.    Sets or returns the width of a horizontal line': 'width'}, 
		\'html': {}, 
		\'i': {}, 
		\'image': {'align Not supported in HTML5. Use style.cssFloat instead.Sets or returns the value of the align attribute of an image': 'align', 'alt Sets or returns the value of the alt attribute of an image': 'alt', 'border Not supported in HTML5. Use style.border instead.Sets or returns the value of the border attribute of an image': 'border', 'complete Returns whether or not the browser is finished loading an image': 'complete', 'crossOrigin Sets or returns the CORS settings of an image': 'crossOrigin', 'height Sets or returns the value of the height attribute of an image': 'height', 'hspace Not supported in HTML5. Usestyle.margin instead.Sets or returns the value of the hspace attribute of an image': 'hspace', 'isMap Sets or returns whether an image should be part of a server-side image-map, or not': 'isMap', 'longDesc Not supported in HTML5.Sets or returns the value of the longdesc attribute of an image': 'longDesc', 'name Not supported in HTML5. Use id instead.Sets or returns the value of the name attribute of an image': 'name', 'naturalHeight Returns the original height of an image': 'naturalHeight', 'naturalWidth Returns the original width of an image': 'naturalWidth', 'src Sets or returns the value of the src attribute of an image': 'src', 'useMap Sets or returns the value of the usemap attribute of an image': 'useMap', 'vspace Not supported in HTML5. Usestyle.margin instead.Sets or returns the value of the vspace attribute of an image': 'vspace', 'width Sets or returns the value of the width attribute of an image': 'width'}, 
		\'input_image': {'alt Sets or returns the value of the alt attribute of an input image': 'alt', 'autofocus Sets or returns whether an input image should automatically get focus when the page loads': 'autofocus', 'defaultValue Sets or returns the default value of an input image': 'defaultValue', 'disabled Sets or returns whether an input image is disabled, or not': 'disabled', 'form Returns a reference to the form that contains the input image': 'form', 'formAction Sets or returns the value of the formaction attribute of an input image': 'formAction', 'formEnctype Sets or returns the value of the formenctype attribute of an input image': 'formEnctype', 'formMethod Sets or returns the value of the formmethod attribute of an input image': 'formMethod', 'formNoValidate Sets or returns whether the form-data should be validated or not, on submission': 'formNoValidate', 'formTarget Sets or returns the value of the formtarget attribute an input image': 'formTarget', 'height Sets or returns the value of the height attribute of the input image': 'height', 'name Sets or returns the value of the name attribute of an input image': 'name', 'src Sets or returns the value of the src attribute of the input image': 'src', 'type Returns which type of form element the input image is': 'type', 'value Sets or returns the value of the value attribute of an input image': 'value', 'width Sets or returns the value of the width attribute of the input image': 'width'}, 
		\'input_time': {'autocomplete Sets or returns the value of the autocomplete attribute of a time field': 'autocomplete', 'autofocus Sets or returns whether a time field should automatically get focus when the page loads': 'autofocus', 'defaultValue Sets or returns the default value of a time field': 'defaultValue', 'disabled Sets or returns whether a time field is disabled, or not': 'disabled', 'form Returns a reference to the form that contains the time field': 'form', 'list Returns a reference to the datalist that contains the time field': 'list', 'max Sets or returns the value of the max attribute of the time field': 'max', 'min Sets or returns the value of the min attribute of the time field': 'min', 'name Sets or returns the value of the name attribute of a time field': 'name', 'readOnly Sets or returns whether the time field is read-only, or not': 'readOnly', 'required Sets or returns whether the time field must be filled out before submitting a form': 'required', 'step Sets or returns the value of the step attribute of the time field': 'step', 'type Returns which type of form element the time field is': 'type', 'value Sets or returns the value of the value attribute of a time field': 'value', 'stepDown() Decrements the value of the time field by a specified number': 'stepDown()', 'stepUp() Increments the value of the time field by a specified number': 'stepUp()'}, 
		\'ins': {'cite Sets or returns the value of the cite attribute of an inserted text': 'cite', 'dateTime Sets or returns the value of the datetime attribute of an inserted text': 'dateTime'}, 
		\'kbd': {}, 
		\'keygen': {'autofocus Sets or returns whether a keygen field automatically gets focus when the page loads, or not': 'autofocus', 'challenge Sets or returns the value of the challenge attribute of a keygen field': 'challenge', 'disabled Sets or returns whether a keygen field is disabled, or not': 'disabled', 'form Returns a reference to the form that contains the keygen field': 'form', 'keytype Sets or returns the value of the keytype attribute of a keygen field': 'keytype', 'name Sets or returns the value of the name attribute of a keygen field': 'name', 'type Returns which type of form element the keygen field is': 'type'}, 
		\'label': {'control Returns the labeled control': 'control', 'form Returns a reference to the form that contains the label': 'form', 'htmlFor Sets or returns the value of the for attribute of a label': 'htmlFor'}, 
		\'legend': {'form Returns a reference to the form that contains the legend': 'form'}, 
		\'li': {'value Sets or returns the value of the value attribute of a list item': 'value'}, 
		\'link': {'charset Not supported in HTML5. Sets or returns the character encoding of the linked document': 'charset', 'crossOrigin Sets or returns the the CORS settings of the linked document': 'crossOrigin', 'disabled Sets or returns whether the linked document is disabled, or not': 'disabled', 'href Sets or returns the URL of the linked document': 'href', 'hreflang Sets or returns the language code of the linked document': 'hreflang', 'media Sets or returns the media type for the link element': 'media', 'rel Sets or returns the relationship between the current document and the linked document': 'rel', 'rev Not supported in HTML5. Sets or returns the reverse relationship from the linked document to the current document': 'rev', 'sizes Returns the value of the sizes attribute of the linked resource': 'sizes', 'type Sets or returns the content type of the linked document': 'type'}, 
		\'map': {'areas Returns a collection of all <area> elements in an image-map': 'areas', 'images Returns a collection of all <img> and <object> elements associated with the image-map': 'images', 'name Sets or returns the value of the name attribute of an image-map': 'name'}, 
		\'mark': {}, 
		\'menu': {'label Sets or returns the value of the label attribute of the menu': 'label', 'type Sets or returns the value of the type attribute of the menu ': 'type'}, 
		\'menuitem': {'checked Sets or returns whether the menu item should be checked': 'checked', 'command Sets or returns the value of the command attribute of the menu item': 'command', 'default Sets or returns whether the menu item should be the default command': 'default', 'disabled Sets or returns whether the menu item should be disabled': 'disabled', 'icon Sets or returns an image that represents the menu item': 'icon', 'label Sets or returns the value of the label attribute of the menu item': 'label', 'radiogroup Sets or returns the value of the radiogroup attribute of the menu item': 'radiogroup', 'type Sets or returns the value of the type attribute of the menu item': 'type'}, 
		\'meta': {'content Sets or returns the value of the content attribute of a meta element': 'content', 'httpEquiv Sets or returns an HTTP header for the information in the content attribute': 'httpEquiv', 'name Sets or returns a name for the information in the content attribute': 'name', 'scheme Not supported in HTML5. Sets or returns how the value of the content attribute should be interpreted': 'scheme'}, 
		\'meter': {'high Sets or returns the value of the high attribute in a gauge': 'high', 'labels Returns a list of <label> elements that are labels for the gauge': 'labels', 'low Sets or returns the value of the low attribute in a gauge': 'low', 'max Sets or returns the value of the max attribute in a gauge': 'max', 'min Sets or returns the value of the min attribute in a gauge': 'min', 'optimum Sets or returns the value of the optimum attribute in a gauge': 'optimum', 'value Sets or returns the value of the value attribute in a gauge': 'value'}, 
		\'month': {'autocomplete Sets or returns the value of the autocomplete attribute of a month field': 'autocomplete', 'autofocus Sets or returns whether a month field should automatically get focus when the page loads': 'autofocus', 'defaultValue Sets or returns the default value of a month field': 'defaultValue', 'disabled Sets or returns whether a month field is disabled, or not': 'disabled', 'form Returns a reference to the form that contains the month field': 'form', 'list Returns a reference to the datalist that contains the month field': 'list', 'max Sets or returns the value of the max attribute of the month field': 'max', 'min Sets or returns the value of the min attribute of the month field': 'min', 'name Sets or returns the value of the name attribute of a month field': 'name', 'readOnly Sets or returns whether the month field is read-only, or not': 'readOnly', 'required Sets or returns whether the month field must be filled out before submitting a form': 'required', 'step Sets or returns the value of the step attribute of the month field': 'step', 'type Returns which type of form element the month field is': 'type', 'value Sets or returns the value of the value attribute of a month field': 'value', 'stepDown() Decrements the value of the month field by a specified number': 'stepDown()', 'stepUp() Increments the value of the month field by a specified number': 'stepUp()'}, 
		\'nav': {}, 
		\'number': {'autocomplete Sets or returns the value of the autocomplete attribute of a number field': 'autocomplete', 'autofocus Sets or returns whether a number field should automatically get focus when the page loads': 'autofocus', 'defaultValue Sets or returns the default value of a number field': 'defaultValue', 'disabled Sets or returns whether a number field is disabled, or not': 'disabled', 'form Returns a reference to the form that contains the number field': 'form', 'list Returns a reference to the datalist that contains the number field': 'list', 'max Sets or returns the value of the max attribute of a number field': 'max', 'min Sets or returns the value of the min attribute of a number field': 'min', 'name Sets or returns the value of the name attribute of a number field': 'name', 'placeholder Sets or returns the value of the placeholder attribute of a number field': 'placeholder', 'readOnly Sets or returns whether the number field is read-only, or not': 'readOnly', 'required Sets or returns whether the number field must be filled out before submitting a form': 'required', 'step Sets or returns the value of the step attribute of a number field': 'step', 'type Returns which type of form element the number field is': 'type', 'value Sets or returns the value of the value attribute of a number field': 'value', 'stepDown() Decrements the value of the input number by a specified number': 'stepDown()', 'stepUp() Increments the value of the input number by a specified number': 'stepUp()'}, 
		\'object': {'align Not supported in HTML5. Usestyle.cssFloat instead. Sets or returns the alignment of the object according to the surrounding text': 'align', 'archive Not supported in HTML5.Sets or returns a string that can be used to implement your     own archive functionality for the object': 'archive', 'border Not supported in HTML5. Usestyle.border instead. Sets or returns the border around the object': 'border', 'code Not supported in HTML5. Sets or returns the URL of the file that contains the     compiled Java class': 'code', 'codeBase Not supported in HTML5. Sets or returns the URL of the component': 'codeBase', 'codeType Not supported in HTML5. ': 'codeType', 'data Sets or returns the URL of the resource to be used by the object': 'data', 'declare Not supported in HTML5. ': 'declare', 'form Returns a reference to the object"s parent form': 'form', 'height Sets or returns the height of the object': 'height', 'hspace Not supported in HTML5. Usestyle.margin instead. Sets or returns the horizontal margin of the object': 'hspace', 'name Sets or returns the name of the object': 'name', 'standby Not supported in HTML5. Sets or returns a message when loading the object': 'standby', 'type Sets or returns the content type for data downloaded via     the data attribute': 'type', 'useMap Sets or returns the name of a client-side image map to be used with the object': 'useMap', 'vspace Not supported in HTML5. Usestyle.margin instead. Sets or returns the vertical margin of the object': 'vspace', 'width Sets or returns the width of the object': 'width'}, 
		\'ol': {'compact Not supported in HTML5. Use style.lineHeight instead. Sets or returns whether the list should render smaller than normal, or not': 'compact', 'reversed Sets or returns whether the list order should be descending or not': 'reversed', 'start Sets or returns the value of the start attribute of an ordered list': 'start', 'type Sets or returns the value of the type attribute of an ordered list': 'type'}, 
		\'optgroup': {'disabled Sets or returns whether an option-group is disabled, or not': 'disabled', 'label Sets or returns the value the label attribute of an option-group': 'label'}, 
		\'option': {'defaultSelected Returns the default value of the selected attribute': 'defaultSelected', 'disabled Sets or returns whether an option is disabled, or not': 'disabled', 'form Returns a reference to the form that contains the option': 'form', 'index Sets or returns the index position of an option in a drop-down list': 'index', 'label Sets or returns the value of the label attribute of an option in a drop-down list': 'label', 'selected Sets or returns the selected state of an option': 'selected', 'text Sets or returns the text of an option': 'text', 'value Sets or returns the value of an option to be sent to the server': 'value'}, 
		\'output': {'defaultValue Sets or returns the default value of an <output> element': 'defaultValue', 'form Returns a reference to the form that contains the <output> element': 'form', 'htmlFor Returns the value of the for attribute of an <output> element': 'htmlFor', 'labels Returns a list of <label> elements associated with the <output> element': 'labels', 'name Sets or returns the value of the name attribute of an <output> element': 'name', 'type Returns which type of HTML element the Output object represents': 'type', 'value Sets or returns the value of an <output> element': 'value'}, 
		\'paragraph': {'align Not supported in HTML5. Usestyle.textAlign instead.Sets or returns the value of the align attribute of the paragraph': 'align'}, 
		\'param': {'name Sets or returns the value of the name attribute of a parameter': 'name', 'value Sets or returns the value of the value attribute of a parameter': 'value'}, 
		\'password': {'autocomplete Sets or returns the value of the autocomplete attribute of a password field': 'autocomplete', 'autofocus Sets or returns whether a password field should automatically get focus when the page loads': 'autofocus', 'defaultValue Sets or returns the default value of a password field': 'defaultValue', 'disabled Sets or returns whether the password field is disabled, or not': 'disabled', 'form Returns a reference to the form that contains the password field': 'form', 'maxLength Sets or returns the value of the maxlength attribute of a password field': 'maxLength', 'name Sets or returns the value of the name attribute of a password field': 'name', 'pattern Sets or returns the value of the pattern attribute of a password field': 'pattern', 'placeholder Sets or returns the value of the placeholder attribute of a password field': 'placeholder', 'readOnly Sets or returns whether a password field is read-only, or not': 'readOnly', 'required Sets or returns whether the password field must be filled out before submitting a form': 'required', 'size Sets or returns the value of the size attribute of a password field': 'size', 'type Returns which type of form element a password field is': 'type', 'value Sets or returns the value of the value attribute of the password field': 'value', 'select() Selects the content of a password field': 'select()'}, 
		\'pre': {'width Not supported in HTML5. Usestyle.width instead.Sets or returns the value of the width attribute of the preformatted text': 'width'}, 
		\'progress': {'labels Returns a list of the progress bar"s labels (if any)': 'labels', 'max Sets or returns the value of the max attribute of a progress bar': 'max', 'position Returns the current position of the progress bar': 'position', 'value Sets or returns the value of the value attribute of a progress bar': 'value'}, 
		\'pushbutton': {'autofocus Sets or returns whether a button should automatically get focus when the page loads, or not': 'autofocus', 'disabled Sets or returns whether a button is disabled, or not': 'disabled', 'form Returns a reference to the form that contains a button': 'form', 'formAction Sets or returns the value of the formaction attribute of a button': 'formAction', 'formEnctype Sets or returns the value of the formenctype attribute of a button': 'formEnctype', 'formMethod Sets or returns the value of the formmethod attribute of a button': 'formMethod', 'formNoValidate Sets or returns whether the form-data should be validated or not, on submission': 'formNoValidate', 'formTarget Sets or returns the value of the formtarget attribute of a button': 'formTarget', 'name Sets or returns the value of the name attribute of a button': 'name', 'type Sets or returns the type of a button': 'type', 'value Sets or returns the value of the value attribute of a button': 'value'}, 
		\'quote': {'cite Sets or returns the value of the cite attribute of a quotation': 'cite'}, 
		\'radio': {'autofocus Sets or returns whether a radio button should automatically get focus when the page loads': 'autofocus', 'checked Sets or returns the checked state of a radio button': 'checked', 'defaultChecked Returns the default value of the checked attribute': 'defaultChecked', 'defaultValue Sets or returns the default value of a radio button': 'defaultValue', 'disabled Sets or returns whether the radio button is disabled, or not': 'disabled', 'form Returns a reference to the form that contains the radio button': 'form', 'name Sets or returns the value of the name attribute of a radio button': 'name', 'required Sets or returns whether the radio button must be checked before submitting a form': 'required', 'type Returns which type of form element the radio button is': 'type', 'value Sets or returns the value of the value attribute of the radio button': 'value'}, 
		\'range': {'autocomplete Sets or returns the value of the autocomplete attribute of a slider control': 'autocomplete', 'autofocus Sets or returns whether a slider control should automatically get focus when the page loads': 'autofocus', 'defaultValue Sets or returns the default value of a slider control': 'defaultValue', 'disabled Sets or returns whether a slider control is disabled, or not': 'disabled', 'form Returns a reference to the form that contains the slider control': 'form', 'list Returns a reference to the datalist that contains the slider control': 'list', 'max Sets or returns the value of the max attribute of the slider control': 'max', 'min Sets or returns the value of the min attribute of the slider control': 'min', 'name Sets or returns the value of the name attribute of a slider control': 'name', 'step Sets or returns the value of the step attribute of the slider control': 'step', 'type Returns which type of form element the slider control is': 'type', 'value Sets or returns the value of the value attribute of a slider control': 'value', 'stepDown() Decrements the value of the slider control by a specified number': 'stepDown()', 'stepUp() Increments the value of the slider control by a specified number': 'stepUp()'}, 
		\'reset': {'autofocus Sets or returns whether a reset button should automatically get focus when the page loads': 'autofocus', 'defaultValue Sets or returns the default value of a reset button': 'defaultValue', 'disabled Sets or returns whether the reset button is disabled, or not': 'disabled', 'form Returns a reference to the form that contains the reset button': 'form', 'name Sets or returns the value of the name attribute of a reset button': 'name', 'type Returns which type of form element the reset button is': 'type', 'value Sets or returns the value of the value attribute of the reset button': 'value'}, 
		\'s': {}, 
		\'samp': {}, 
		\'script': {'async Sets or returns whether a script should be executed asynchronously as soon as it is available': 'async', 'charset Sets or returns the value of the charset attribute of a script': 'charset', 'crossOrigin Sets or returns the the CORS settings of a script': 'crossOrigin', 'defer Sets or returns whether a script should be executed when the page has finished parsing': 'defer', 'src Sets or returns the value of the src attribute of a script': 'src', 'text Sets or returns the contents of all the text nodes that are children of a script': 'text', 'type Sets or returns the value of the type attribute of a script': 'type'}, 
		\'search': {'autocomplete Sets or returns the value of the autocomplete attribute of a search field': 'autocomplete', 'autofocus Sets or returns whether a search field should automatically get focus when the page loads': 'autofocus', 'defaultValue Sets or returns the default value of a search field': 'defaultValue', 'disabled Sets or returns whether a search field is disabled, or not': 'disabled', 'form Returns a reference to the form that contains the search field': 'form', 'list Returns a reference to the datalist that contains the search field': 'list', 'maxLength Sets or returns the value of the maxlength attribute of a search field': 'maxLength', 'name Sets or returns the value of the name attribute of a search field': 'name', 'pattern Sets or returns the value of the pattern attribute of a search field': 'pattern', 'placeholder Sets or returns the value of the placeholder attribute of a search field': 'placeholder', 'readOnly Sets or returns whether the search field is read-only, or not': 'readOnly', 'required Sets or returns whether the search field must be filled out before submitting a form': 'required', 'size Sets or returns the value of the size attribute of the search field': 'size', 'type Returns which type of form element the search field is': 'type', 'value Sets or returns the value of the value attribute of a search field': 'value'}, 
		\'section': {}, 
		\'select': {'options Returns a collection of all the options in a drop-down list': 'options', 'disabled Sets or returns whether the drop-down list is disabled, or not': 'disabled', 'form Returns a reference to the form that contains the drop-down list': 'form', 'length Returns the number of <option> elements in a drop-down list': 'length', 'multiple Sets or returns whether more than one option can be selected from the drop-down list': 'multiple', 'name Sets or returns the value of the name attribute of a drop-down list': 'name', 'selectedIndex Sets or returns the index of the selected option in a drop-down list': 'selectedIndex', 'size Sets or returns the value of the size of a drop-down list': 'size', 'type Returns which type of form element a drop-down list is': 'type', 'value Sets or returns the value of the selected option in a drop-down list': 'value', 'add() Adds an option to a drop-down list': 'add()', 'remove() Removes an option from a drop-down list': 'remove()'}, 
		\'small': {}, 
		\'source': {'media Sets or returns the value of the media attribute in a <source> element': 'media', 'src Sets or returns the value of the src attribute in a <source> element': 'src', 'type Sets or returns the value of the type attribute in a <source> element': 'type'}, 
		\'span': {}, 
		\'strong': {}, 
		\'style': {'alignContent Sets or returns the alignment between the lines inside a flexible container when the items do not use all available space': 'alignContent', 'alignItems Sets or returns the alignment for items inside a flexible container': 'alignItems', 'alignSelf Sets or returns the alignment for selected items inside a flexible container': 'alignSelf', 'animation A shorthand property for all the animation properties below, except the animationPlayState property': 'animation', 'animationDelay Sets or returns when the animation will start': 'animationDelay', 'animationDirection Sets or returns whether or not the animation should play in reverse on alternate cycles': 'animationDirection', 'animationDuration Sets or returns how many seconds or milliseconds an animation takes to complete one cycle': 'animationDuration', 'animationFillMode Sets or returns what values are applied by the animation outside the time it is executing': 'animationFillMode', 'animationIterationCount Sets or returns the number of times an animation should be played': 'animationIterationCount', 'animationName Sets or returns a name for the @keyframes animation': 'animationName', 'animationTimingFunction Sets or returns the speed curve of the animation': 'animationTimingFunction', 'animationPlayState Sets or returns whether the animation is running or paused': 'animationPlayState', 'background Sets or returns all the background properties in one declaration': 'background', 'backgroundAttachment Sets or returns whether a background-image is fixed or scrolls with the page': 'backgroundAttachment', 'backgroundColor Sets or returns the background-color of an element': 'backgroundColor', 'backgroundImage Sets or returns the background-image for an element': 'backgroundImage', 'backgroundPosition Sets or returns the starting position of a background-image': 'backgroundPosition', 'backgroundRepeat Sets or returns how to repeat (tile) a background-image': 'backgroundRepeat', 'backgroundClip Sets or returns the painting area of the background': 'backgroundClip', 'backgroundOrigin Sets or returns the positioning area of the background images': 'backgroundOrigin', 'backgroundSize Sets or returns the size of the background image': 'backgroundSize', 'backfaceVisibility Sets or returns whether or not an element should be visible when not facing the screen': 'backfaceVisibility', 'border Sets or returns borderWidth, borderStyle, and borderColor in one declaration': 'border', 'borderBottom Sets or returns all the borderBottom* properties in one declaration': 'borderBottom', 'borderBottomColor Sets or returns the color of the bottom border': 'borderBottomColor', 'borderBottomLeftRadius Sets or returns the shape of the border of the bottom-left corner': 'borderBottomLeftRadius', 'borderBottomRightRadius Sets or returns the shape of the border of the bottom-right corner': 'borderBottomRightRadius', 'borderBottomStyle Sets or returns the style of the bottom border': 'borderBottomStyle', 'borderBottomWidth Sets or returns the width of the bottom border': 'borderBottomWidth', 'borderCollapse Sets or returns whether the table border should be collapsed into a single border, or not': 'borderCollapse', 'borderColor Sets or returns the color of an element"s border (can have up to four values)': 'borderColor', 'borderImage A shorthand property for setting or returning all the borderImage* properties': 'borderImage', 'borderImageOutset Sets or returns the amount by which the border image area extends beyond the border box': 'borderImageOutset', 'borderImageRepeat Sets or returns whether the image-border should be repeated, rounded or stretched': 'borderImageRepeat', 'borderImageSlice Sets or returns the inward offsets of the image-border': 'borderImageSlice', 'borderImageSource Sets or returns the image to be used as a border': 'borderImageSource', 'borderImageWidth Sets or returns the widths of the image-border': 'borderImageWidth', 'borderLeft Sets or returns all the borderLeft* properties in one declaration': 'borderLeft', 'borderLeftColor Sets or returns the color of the left border': 'borderLeftColor', 'borderLeftStyle Sets or returns the style of the left border': 'borderLeftStyle', 'borderLeftWidth Sets or returns the width of the left border': 'borderLeftWidth', 'borderRadius A shorthand property for setting or returning all the four border*Radius properties': 'borderRadius', 'borderRight Sets or returns all the borderRight* properties in one declaration': 'borderRight', 'borderRightColor Sets or returns the color of the right border': 'borderRightColor', 'borderRightStyle Sets or returns the style of the right border': 'borderRightStyle', 'borderRightWidth Sets or returns the width of the right border': 'borderRightWidth', 'borderSpacing Sets or returns the space between cells in a table': 'borderSpacing', 'borderStyle Sets or returns the style of an element"s border (can have up to four values)': 'borderStyle', 'borderTop Sets or returns all the borderTop* properties in one declaration': 'borderTop', 'borderTopColor Sets or returns the color of the top border': 'borderTopColor', 'borderTopLeftRadius Sets or returns the shape of the border of the top-left corner': 'borderTopLeftRadius', 'borderTopRightRadius Sets or returns the shape of the border of the top-right corner': 'borderTopRightRadius', 'borderTopStyle Sets or returns the style of the top border': 'borderTopStyle', 'borderTopWidth Sets or returns the width of the top border': 'borderTopWidth', 'borderWidth Sets or returns the width of an element"s border (can have up to four values)': 'borderWidth', 'bottom Sets or returns the bottom position of a positioned element': 'bottom', 'boxDecorationBreak Sets or returns the behaviour of the background and border of an element at page-break, or, for  in-line elements, at line-break.': 'boxDecorationBreak', 'boxShadow Attaches one or more drop-shadows to the box': 'boxShadow', 'boxSizing Allows you to define certain elements to fit an area in a certain way': 'boxSizing', 'captionSide Sets or returns the position of the table caption': 'captionSide', 'clear Sets or returns the position of the element relative to floating objects': 'clear', 'clip Sets or returns which part of a positioned element is visible': 'clip', 'color Sets or returns the color of the text': 'color', 'columnCount Sets or returns the number of columns an element should be divided into': 'columnCount', 'columnFill Sets or returns how to fill columns': 'columnFill', 'columnGap Sets or returns the gap between the columns': 'columnGap', 'columnRule A shorthand property for setting or returning all the columnRule* properties': 'columnRule', 'columnRuleColor Sets or returns the color of the rule between columns': 'columnRuleColor', 'columnRuleStyle Sets or returns the style of the rule between columns': 'columnRuleStyle', 'columnRuleWidth Sets or returns the width of the rule between columns': 'columnRuleWidth', 'columns A shorthand property for setting or returning columnWidth and columnCount': 'columns', 'columnSpan Sets or returns how many columns an element should span across': 'columnSpan', 'columnWidth Sets or returns the width of the columns': 'columnWidth', 'content Used with the :before and :after pseudo-elements, to insert generated content': 'content', 'counterIncrement Increments one or more counters': 'counterIncrement', 'counterReset Creates or resets one or more counters': 'counterReset', 'cursor Sets or returns the type of cursor to display for the mouse pointer': 'cursor', 'direction Sets or returns the text direction': 'direction', 'display Sets or returns an element"s display type': 'display', 'emptyCells Sets or returns whether to show the border and background of empty cells, or not': 'emptyCells', 'filter Sets or returns image filters (visual effects, like blur and saturation)': 'filter', 'flex Sets or returns the length of the item, relative to the rest': 'flex', 'flexBasis Sets or returns the initial length of a flexible item': 'flexBasis', 'flexDirection Sets or returns the direction of the flexible items': 'flexDirection', 'flexFlow A shorthand property for the flexDirection and the flexWrap properties': 'flexFlow', 'flexGrow Sets or returns how much the item will grow relative to the rest': 'flexGrow', 'flexShrink Sets or returns how the item will shrink relative to the rest': 'flexShrink', 'flexWrap Sets or returns whether the flexible items should wrap or not': 'flexWrap', 'cssFloat Sets or returns the horizontal alignment of an element': 'cssFloat', 'font Sets or returns fontStyle, fontVariant, fontWeight, fontSize, lineHeight, and fontFamily in one declaration': 'font', 'fontFamily Sets or returns the font family for text': 'fontFamily', 'fontSize Sets or returns the font size of the text': 'fontSize', 'fontStyle Sets or returns whether the style of the font is normal, italic or oblique': 'fontStyle', 'fontVariant Sets or returns whether the font should be displayed in small capital letters': 'fontVariant', 'fontWeight Sets or returns the boldness of the font': 'fontWeight', 'fontSizeAdjust Preserves the readability of text when font fallback occurs': 'fontSizeAdjust', 'fontStretch Selects a normal, condensed, or expanded face from a font family': 'fontStretch', 'hangingPunctuation Specifies whether a punctuation character may be placed outside the line box': 'hangingPunctuation', 'height Sets or returns the height of an element': 'height', 'hyphens Sets how to split words to improve the layout of paragraphs': 'hyphens', 'icon Provides the author the ability to style an element with an iconic equivalent': 'icon', 'imageOrientation Specifies a rotation in the right or clockwise direction that a user agent applies to an image': 'imageOrientation', 'justifyContent Sets or returns the alignment between the items inside a flexible container when the items do not use all available space.': 'justifyContent', 'left Sets or returns the left position of a positioned element': 'left', 'letterSpacing Sets or returns the space between characters in a text': 'letterSpacing', 'lineHeight Sets or returns the distance between lines in a text': 'lineHeight', 'listStyle Sets or returns listStyleImage, listStylePosition, and listStyleType in one declaration': 'listStyle', 'listStyleImage Sets or returns an image as the list-item marker': 'listStyleImage', 'listStylePosition Sets or returns the position of the list-item marker': 'listStylePosition', 'listStyleType Sets or returns the list-item marker type': 'listStyleType', 'margin Sets or returns the margins of an element (can have up to four values)': 'margin', 'marginBottom Sets or returns the bottom margin of an element': 'marginBottom', 'marginLeft Sets or returns the left margin of an element': 'marginLeft', 'marginRight Sets or returns the right margin of an element': 'marginRight', 'marginTop Sets or returns the top margin of an element': 'marginTop', 'maxHeight Sets or returns the maximum height of an element': 'maxHeight', 'maxWidth Sets or returns the maximum width of an element': 'maxWidth', 'minHeight Sets or returns the minimum height of an element': 'minHeight', 'minWidth Sets or returns the minimum width of an element': 'minWidth', 'navDown Sets or returns where to navigate when using the arrow-down navigation key': 'navDown', 'navIndex Sets or returns the tabbing order for an element': 'navIndex', 'navLeft Sets or returns where to navigate when using the arrow-left navigation key': 'navLeft', 'navRight Sets or returns where to navigate when using the arrow-right navigation key': 'navRight', 'navUp Sets or returns where to navigate when using the arrow-up navigation key': 'navUp', 'opacity Sets or returns the opacity level for an element': 'opacity', 'order Sets or returns the order of the flexible item, relative to the rest': 'order', 'orphans Sets or returns the minimum number of lines for an element that must be left at the bottom of a page when a page break occurs inside an element': 'orphans', 'outline Sets or returns all the outline properties in one declaration': 'outline', 'outlineColor Sets or returns the color of the outline around a element': 'outlineColor', 'outlineOffset Offsets an outline, and draws it beyond the border edge': 'outlineOffset', 'outlineStyle Sets or returns the style of the outline around an element': 'outlineStyle', 'outlineWidth Sets or returns the width of the outline around an element': 'outlineWidth', 'overflow Sets or returns what to do with content that renders outside the element box': 'overflow', 'overflowX Specifies what to do with the left/right edges of the content, if it overflows the element"s content area': 'overflowX', 'overflowY Specifies what to do with the top/bottom edges of the content, if it overflows the element"s content area': 'overflowY', 'padding Sets or returns the padding of an element (can have up to four values)': 'padding', 'paddingBottom Sets or returns the bottom padding of an element': 'paddingBottom', 'paddingLeft Sets or returns the left padding of an element': 'paddingLeft', 'paddingRight Sets or returns the right padding of an element': 'paddingRight', 'paddingTop Sets or returns the top padding of an element': 'paddingTop', 'pageBreakAfter Sets or returns the page-break behavior after an element': 'pageBreakAfter', 'pageBreakBefore Sets or returns the page-break behavior before an element': 'pageBreakBefore', 'pageBreakInside Sets or returns the page-break behavior inside an element': 'pageBreakInside', 'perspective Sets or returns the perspective on how 3D elements are viewed': 'perspective', 'perspectiveOrigin Sets or returns the bottom position of 3D elements': 'perspectiveOrigin', 'position Sets or returns the type of positioning method used for an element (static, relative, absolute or fixed)': 'position', 'quotes Sets or returns the type of quotation marks for embedded quotations': 'quotes', 'resize Sets or returns whether or not an element is resizable by the user': 'resize', 'right Sets or returns the right position of a positioned element': 'right', 'tableLayout Sets or returns the way to lay out table cells, rows, and columns': 'tableLayout', 'tabSize Sets or returns the length of the tab-character': 'tabSize', 'textAlign Sets or returns the horizontal alignment of text': 'textAlign', 'textAlignLast Sets or returns how the last line of a block or a line right before a forced line break is aligned when text-align is "justify"': 'textAlignLast', 'textDecoration Sets or returns the decoration of a text': 'textDecoration', 'textDecorationColor Sets or returns the color of the text-decoration': 'textDecorationColor', 'textDecorationLine Sets or returns the type of line in a text-decoration': 'textDecorationLine', 'textDecorationStyle Sets or returns the style of the line in a text decoration': 'textDecorationStyle', 'textIndent Sets or returns the indentation of the first line of text': 'textIndent', 'textJustify Sets or returns the justification method used when text-align is "justify"': 'textJustify', 'textOverflow Sets or returns what should happen when text overflows the containing element': 'textOverflow', 'textShadow Sets or returns the shadow effect of a text': 'textShadow', 'textTransform Sets or returns the capitalization of a text': 'textTransform', 'top Sets or returns the top position of a positioned element': 'top', 'transform Applies a 2D or 3D transformation to an element': 'transform', 'transformOrigin Sets or returns the position of transformed elements': 'transformOrigin', 'transformStyle Sets or returns how nested elements are rendered in 3D space': 'transformStyle', 'transition A shorthand property for setting or returning the four transition properties': 'transition', 'transitionProperty Sets or returns the CSS property that the transition effect is for': 'transitionProperty', 'transitionDuration Sets or returns how many seconds or milliseconds a transition effect takes to complete': 'transitionDuration', 'transitionTimingFunction Sets or returns the speed curve of the transition effect': 'transitionTimingFunction', 'transitionDelay Sets or returns when the transition effect will start': 'transitionDelay', 'unicodeBidi Sets or returns whether the text should be overridden to support multiple languages in the same document': 'unicodeBidi', 'verticalAlign Sets or returns the vertical alignment of the content in an element': 'verticalAlign', 'visibility Sets or returns whether an element should be visible': 'visibility', 'whiteSpace Sets or returns how to handle tabs, line breaks and whitespace in a text': 'whiteSpace', 'width Sets or returns the width of an element': 'width', 'wordBreak Sets or returns line breaking rules for non-CJK scripts': 'wordBreak', 'wordSpacing Sets or returns the spacing between words in a text': 'wordSpacing', 'wordWrap Allows long, unbreakable words to be broken and wrap to the next line': 'wordWrap', 'widows Sets or returns the minimum number of lines for an element that must be visible at the top of a page': 'widows', 'zIndex Sets or returns the stack order of a positioned element': 'zIndex'}, 
		\'sub': {}, 
		\'submit': {'autofocus Sets or returns whether a submit button should automatically get focus when the page loads': 'autofocus', 'defaultValue Sets or returns the default value of a submit button': 'defaultValue', 'disabled Sets or returns whether the submit button is disabled, or not': 'disabled', 'form Returns a reference to the form that contains the submit button': 'form', 'formAction Sets or returns the value of the formaction attribute of a submit button': 'formAction', 'formEnctype Sets or returns the value of the formenctype attribute of a submit button': 'formEnctype', 'formMethod Sets or returns the value of the formmethod attribute of a submit button': 'formMethod', 'formNoValidate Sets or returns whether the form-data should be validated or not, on submission': 'formNoValidate', 'formTarget Sets or returns the value of the formtarget attribute of a submit button': 'formTarget', 'name Sets or returns the value of the name attribute of a submit button': 'name', 'type Returns which type of form element the submit button is': 'type', 'value Sets or returns the value of the value attribute of the submit button': 'value'}, 
		\'summary': {}, 
		\'sup': {}, 
		\'table': {'rows Returns a collection of all <tr> elements in a table': 'rows', 'tBodies Returns a collection of all <tbody> elements in a table': 'tBodies', 'align Not supported in HTML5. Use style.cssFloat instead.Sets or returns the alignment of a table according to surrounding text': 'align', 'background Not supported in HTML5. Use style.background instead.Sets or returns the background image of a table': 'background', 'bgColor Not supported in HTML5. Use style.backgroundColor instead.Sets or returns the background color of a table': 'bgColor', 'border Deprecated. Use style.border instead.Sets or returns the width of the table border.': 'border', 'caption Returns the <caption> element of a table': 'caption', 'cellPadding Not supported in HTML5. Use style.padding instead.Sets or returns the amount of space between the cell     border and cell content': 'cellPadding', 'cellSpacing Not supported in HTML5. Use style.borderSpacing instead.Sets or returns the amount of space between the cells in a     table': 'cellSpacing', 'frame Not supported in HTML5.Sets or returns which outer-borders (of a table) that should be displayed': 'frame', 'height Not supported in HTML5. Use style.height instead.Sets or returns the height of a table': 'height', 'rules Not supported in HTML5.Sets or returns which inner-borders (between the cells) that should be displayed in a table': 'rules', 'summary Not supported in HTML5.Sets or returns a description of the data in a table': 'summary', 'tFoot Returns a reference to the <tfoot> element of a table': 'tFoot', 'tHead Returns a reference to the <thead> element of a table': 'tHead', 'width Not supported in HTML5. Use style.width instead.Sets or returns the width of the table': 'width', 'createCaption() Creates an empty <caption> element and adds it to the table': 'createCaption()', 'createTFoot() Creates an empty <tfoot> element and adds it to the table': 'createTFoot()', 'createTHead() Creates an empty <thead> element and adds it to the table': 'createTHead()', 'deleteCaption() Removes the first <caption> element from the table': 'deleteCaption()', 'deleteRow() Removes a row (<tr>) from the table': 'deleteRow()', 'deleteTFoot() Removes the <tfoot> element from the table': 'deleteTFoot()', 'deleteTHead() Removes the <thead> element from the table': 'deleteTHead()', 'insertRow() Creates an empty <tr> element and adds it to the table': 'insertRow()'}, 
		\'tabledata': {'abbr Not supported in HTML5.Sets or returns the value of the abbr attribute': 'abbr', 'align Not supported in HTML5. Use style.textAlign instead.Sets or returns the horizontal alignment of the content in a data cell': 'align', 'axis Not supported in HTML5.Sets or returns a comma-separated list of related data cells': 'axis', 'background Not supported in HTML5. Use style.background instead.Sets or returns the background image of a data cell': 'background', 'bgColor Not supported in HTML5. Use style.backgroundColor instead.Sets or returns the background color of a table': 'bgColor', 'cellIndex Returns the position of a cell in the cells collection of     a table row': 'cellIndex', 'ch Not supported in HTML5.Sets or returns an alignment character for a data cell': 'ch', 'chOff Not supported in HTML5.Sets or returns the horizontal offset of the ch property': 'chOff', 'colSpan Sets or returns the value of the colspan attribute': 'colSpan', 'headers Sets or returns the value of the headers attribute': 'headers', 'height Not supported in HTML5. Use style.height instead.Sets or returns the height of a data cell': 'height', 'noWrap Not supported in HTML5. Use style.whiteSpace instead.Sets or returns whether the content in a cell can be wrapped': 'noWrap', 'rowSpan Sets or returns the value of the rowspan attribute': 'rowSpan', 'vAlign Not supported in HTML5. Use style.verticalAlign instead.Sets or returns the vertical alignment of the content within a cell': 'vAlign', 'width Not supported in HTML5. Use style.width instead.Sets or returns the width of a data cell': 'width'}, 
		\'tablehead': {'abbr Sets or returns the value of the abbr attribute': 'abbr', 'align Not supported in HTML5. Use style.textAlign instead.Sets or returns the horizontal alignment of the content in a data cell': 'align', 'axis Not supported in HTML5.Sets or returns a comma-separated list of related data cells': 'axis', 'background Not supported in HTML5. Use style.background instead.Sets or returns the background image of a data cell': 'background', 'bgColor Not supported in HTML5. Use style.backgroundColor instead.Sets or returns the background color of a table': 'bgColor', 'cellIndex Returns the position of a cell in the cells collection of     a table row': 'cellIndex', 'ch Not supported in HTML5.Sets or returns an alignment character for a data cell': 'ch', 'chOff Not supported in HTML5. Sets or returns the horizontal offset of the ch property': 'chOff', 'colSpan Sets or returns the value of the colspan attribute': 'colSpan', 'headers Sets or returns the value of the headers attribute': 'headers', 'height Not supported in HTML5. Sets or returns the height of a data cellUse style.height instead': 'height', 'noWrap Not supported in HTML5. Sets or returns whether the content in a cell can be wrappedUse style.whiteSpace instead': 'noWrap', 'rowSpan Sets or returns the value of the rowspan attribute': 'rowSpan', 'vAlign Not supported in HTML5. Sets or returns the vertical alignment of the content within a cellUse style.verticalAlign instead': 'vAlign', 'width Not supported in HTML5. Sets or returns the width of a data cellUse style.width instead': 'width'}, 
		\'tablerow': {'cells Returns a collection of all <td> or <th> elements in a table row': 'cells', 'align Not supported in HTML5. Use style.textAlign instead.    Sets or returns the horizontal alignment of the content within a table row': 'align', 'bgColor Not supported in HTML5. Use style.backgroundColor instead.Sets or returns the background color of a table row': 'bgColor', 'ch Not supported in HTML5. Sets or returns an alignment character for cells in a     table row': 'ch', 'chOff Not supported in HTML5. Sets or returns the horizontal offset of the ch property': 'chOff', 'height Not supported in HTML5. Use style.height instead.    Sets or returns the height of a table row. ': 'height', 'rowIndex Returns the position of a row in the rows     collection of a table': 'rowIndex', 'sectionRowIndex Returns the position of a row in the rows     collection of a tbody,     thead, or tfoot': 'sectionRowIndex', 'vAlign Not supported in HTML5. Usestyle.verticalAlign instead.Sets or returns the vertical alignment of the content within a table row': 'vAlign', 'deleteCell() Deletes a cell from the current table row': 'deleteCell()', 'insertCell() Inserts a cell into the current table row': 'insertCell()'}, 
		\'text': {'autocomplete Sets or returns the value of the autocomplete attribute of a text field': 'autocomplete', 'autofocus Sets or returns whether a text field should automatically get focus when the page loads': 'autofocus', 'defaultValue Sets or returns the default value of a text field': 'defaultValue', 'disabled Sets or returns whether the text field is disabled, or not': 'disabled', 'form Returns a reference to the form that contains the text field': 'form', 'list Returns a reference to the datalist that contains the text field': 'list', 'maxLength Sets or returns the value of the maxlength attribute of a text field': 'maxLength', 'name Sets or returns the value of the name attribute of a text field': 'name', 'pattern Sets or returns the value of the pattern attribute of a text field': 'pattern', 'placeholder Sets or returns the value of the placeholder attribute of a text field': 'placeholder', 'readOnly Sets or returns whether a text field is read-only, or not': 'readOnly', 'required Sets or returns whether the text field must be filled out before submitting a form': 'required', 'size Sets or returns the value of the size attribute of a text field': 'size', 'type Returns which type of form element a text field is': 'type', 'value Sets or returns the value of the value attribute of the     text field': 'value'}, 
		\'time': {'dateTime Sets or returns the value of the datetime attribute in a <time> element': 'dateTime'}, 
		\'title': {'text Sets or returns the text of the document"s title': 'text'}, 
		\'track': {'default Sets or returns the default state of the track': 'default', 'kind Sets or returns the value of the kind attribute of the track': 'kind', 'label Sets or returns the value of the label attribute of the track': 'label', 'readyState Returns the current state of the track resource': 'readyState', 'src Sets or returns the value of the src attribute of the track': 'src', 'srclang Sets or returns the value of the srclang attribute of the track': 'srclang', 'track Returns a TextTrack object representing the track element"s text track data': 'track'}, 
		\'u': {}, 
		\'ul': {'compact Not supported in HTML5. Usestyle.lineHeight instead.Sets or returns whether the unordered list should render smaller than normal, or not': 'compact', 'type Not supported in HTML5. Usestyle.listStyleType instead.Sets or returns the value of the type attribute of an unordered list': 'type'}, 
		\'url': {'autocomplete Sets or returns the value of the autocomplete attribute of a URL field': 'autocomplete', 'autofocus Sets or returns whether a URL field should automatically get focus when the page loads': 'autofocus', 'defaultValue Sets or returns the default value of a URL field': 'defaultValue', 'disabled Sets or returns whether a URL field is disabled, or not': 'disabled', 'form Returns a reference to the form that contains the URL field': 'form', 'list Returns a reference to the datalist that contains the URL field': 'list', 'maxLength Sets or returns the value of the maxlength attribute of a URL field': 'maxLength', 'name Sets or returns the value of the name attribute of a URL field': 'name', 'pattern Sets or returns the value of the pattern attribute of a URL field': 'pattern', 'placeholder Sets or returns the value of the placeholder attribute of a URL field': 'placeholder', 'readOnly Sets or returns whether the URL field is read-only, or not': 'readOnly', 'required Sets or returns whether the URL field must be filled out before submitting a form': 'required', 'size Sets or returns the value of the size attribute of the URL field': 'size', 'type Returns which type of form element the URL field is': 'type', 'value Sets or returns the value of the value attribute of a URL field': 'value'}, 
		\'var': {}, 
		\'video': {'audioTracks Returns an AudioTrackList object representing available audio tracks': 'audioTracks', 'autoplay Sets or returns whether a video should start playing as soon as it is ready': 'autoplay', 'buffered Returns a TimeRanges object representing the buffered parts of a video': 'buffered', 'controller Returns the MediaController object representing the current media controller of a video': 'controller', 'controls Sets or returns whether a video should have controls displayed (play/pause etc)': 'controls', 'crossOrigin Sets or returns the CORS settings of a video': 'crossOrigin', 'currentSrc Returns the URL of the current video': 'currentSrc', 'currentTime Sets or returns the current playback position in a video (in seconds)': 'currentTime', 'defaultMuted Sets or returns whether the video should be muted by default': 'defaultMuted', 'defaultPlaybackRate Sets or returns whether the default playback speed of the video': 'defaultPlaybackRate', 'duration Returns the length of a video (in seconds)': 'duration', 'ended Returns whether the playback of the video has ended': 'ended', 'error Returns a MediaError object representing the error state of the video': 'error', 'height Sets or returns the value of the height attribute of a video': 'height', 'loop Sets or returns whether the video should start playing over again, every time it is finished': 'loop', 'mediaGroup Sets or returns the name of the media group the video(s) is a part of': 'mediaGroup', 'muted Sets or returns whether the sound of a video should be turned off': 'muted', 'networkState Returns the current network state of a video': 'networkState', 'paused Sets or returns whether a video is paused': 'paused', 'playbackRate Sets or returns the speed of the video playback': 'playbackRate', 'played Returns a TimeRanges object representing the played parts of the video': 'played', 'poster Sets or returns the value of the poster attribute of a video': 'poster', 'preload Sets or returns the value of the preload attribute of a video': 'preload', 'readyState Returns the current ready state of a video': 'readyState', 'seekable Returns a TimeRanges object representing the seekable parts of a video': 'seekable', 'seeking Returns whether the user is currently seeking in the video': 'seeking', 'src Sets or returns the value of the src attribute of a video': 'src', 'startDate Returns a Date object representing the current time offset': 'startDate', 'textTracks Returns a TextTrackList object representing the available text tracks': 'textTracks', 'videoTracks Returns a VideoTrackList object representing the available video tracks': 'videoTracks', 'volume Sets or returns the audio volume of a video': 'volume', 'width Sets or returns the value of the width attribute of a video': 'width', 'addTextTrack() Adds a new text track to the video': 'addTextTrack()', 'canPlayType() Checks whether the browser can play the specified video type': 'canPlayType()', 'load() Re-loads the video element': 'load()', 'play() Starts playing the video': 'play()', 'pause() Pauses the currently playing video': 'pause()'}, 
		\'week': {'autocomplete Sets or returns the value of the autocomplete attribute of a week field': 'autocomplete', 'autofocus Sets or returns whether a week field should automatically get focus when the page loads': 'autofocus', 'defaultValue Sets or returns the default value of a week field': 'defaultValue', 'disabled Sets or returns whether a week field is disabled, or not': 'disabled', 'form Returns a reference to the form that contains the week field': 'form', 'list Returns a reference to the datalist that contains the week field': 'list', 'max Sets or returns the value of the max attribute of the week field': 'max', 'min Sets or returns the value of the min attribute of the week field': 'min', 'name Sets or returns the value of the name attribute of a week field': 'name', 'readOnly Sets or returns whether the week field is read-only, or not': 'readOnly', 'required Sets or returns whether the week field must be filled out before submitting a form': 'required', 'step Sets or returns the value of the step attribute of the week field': 'step', 'type Returns which type of form element the week field is': 'type', 'value Sets or returns the value of the value attribute of a week field': 'value', 'stepDown() Decrements the value of the week field by a specified number': 'stepDown()', 'stepUp() Increments the value of the week field by a specified number': 'stepUp()'}}
	return self.pickL(all)
endfunction


XPT dom
XSET name.pre=name
`name^NextC($_xDomObj)^

