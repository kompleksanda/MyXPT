XPTemplate priority=lang

let s:f = g:XPTfuncs()

fun! s:f._xDomObj()
	let all={'abbr': {}, 
		\'address': {}, 
		\'article': {}, 
		\'aside': {}, 
		\'attributes': {'attr.isId Returns true if the attribute is of type Id, otherwise it returns false': 'attr.isId', 'attr.name Returns the name of an attribute': 'attr.name', 'attr.value Sets or returns the value of the attribute': 'attr.value', 'attr.specified Returns true if the attribute has been specified, otherwise it returns false': 'attr.specified', '\xa0 \xa0': '\xa0', 'nodemap.getNamedItem() Returns a specified attribute node from a NamedNodeMap': 'nodemap.getNamedItem()', 'nodemap.item() Returns the attribute node at a specified index in a NamedNodeMap': 'nodemap.item()', 'nodemap.length Returns the number of attribute nodes in a NamedNodeMap': 'nodemap.length', 'nodemap.removeNamedItem() Removes a specified attribute node': 'nodemap.removeNamedItem()', 'nodemap.setNamedItem() Sets the specified attribute node (by name)': 'nodemap.setNamedItem()', 'attr.appendChild() Attributes don"t have child nodes': 'attr.appendChild()', 'attr.attributes Attributes don"t have attributes': 'attr.attributes', 'attr.baseURI use document.baseURI instead': 'attr.baseURI', 'attr.childNodes Attributes don"t have child nodes': 'attr.childNodes', 'attr.cloneNode() Get or set the attr.value instead': 'attr.cloneNode()', 'attr.firstChild Attributes don"t have child nodes': 'attr.firstChild', 'attr.hasAttributes() Attributes don"t have attributes': 'attr.hasAttributes()', 'attr.hasChildNodes Attributes don"t have child nodes': 'attr.hasChildNodes', 'attr.insertBefore() Attributes don"t have child nodes': 'attr.insertBefore()', 'attr.isEqualNode() Makes no sense': 'attr.isEqualNode()', 'attr.isSameNode() Makes no sense': 'attr.isSameNode()', 'attr.isSupported() Is always true': 'attr.isSupported()', 'attr.lastChild Attributes don"t have child nodes': 'attr.lastChild', 'attr.nextSibling Attributes don"t have siblings': 'attr.nextSibling', 'attr.nodeName Use attr.name instead': 'attr.nodeName', 'attr.nodeType This is always 2 (ATTRIBUTE_NODE) ': 'attr.nodeType', 'attr.nodeValue Use attr.value instead': 'attr.nodeValue', 'attr.normalize() Attributes cannot be normalized': 'attr.normalize()', 'attr.ownerDocument This is always your HTML document': 'attr.ownerDocument', 'attr.ownerElement This is the HTML element you used to access the attribute': 'attr.ownerElement', 'attr.parentNode This is the HTML element you used to access the attribute': 'attr.parentNode', 'attr.previousSibling Attributes don"t have siblings': 'attr.previousSibling', 'attr.removeChild Attributes don"t have child nodes': 'attr.removeChild', 'attr.replaceChild Attributes don"t have child nodes': 'attr.replaceChild', 'attr.textContent Use attr.value instead': 'attr.textContent'}, 
		\'b': {}, 
		\'base': {}, 
		\'cite': {}, 
		\'code': {}, 
		\'col': {'span Sets or returns the value of the span attribute of a column': 'span'}, 
		\'colgroup': {'span Sets or returns the value of the span attribute of a column group': 'span'}, 
		\'color': {'autocomplete Sets or returns the value of the autocomplete attribute of a color picker': 'autocomplete', 'autofocus Sets or returns whether a color picker should automatically get focus when the page loads': 'autofocus', 'defaultValue Sets or returns the default value of a color picker': 'defaultValue', 'disabled Sets or returns whether a color picker is disabled, or not': 'disabled', 'form Returns a reference to the form that contains the color picker': 'form', 'list Returns a reference to the <datalist> element that contains the color picker': 'list', 'name Sets or returns the value of the name attribute of a color picker': 'name', 'type Returns which type of form element the color picker is': 'type', 'value Sets or returns the value of the value attribute of a color picker': 'value'}, 
		\'datalist': {'options Returns a collection of all the options in a datalist': 'options'}, 
		\'dd': {}, 
		\'del': {'cite Sets or returns the value of the cite attribute of a deleted text': 'cite', 'dateTime Sets or returns the value of the datetime attribute of a deleted text': 'dateTime'}, 
		\'details': {'open Sets or returns whether the details should be visible (open) to the user, or not': 'open'}, 
		\'dfn': {}, 
		\'dialog': {'open Sets or returns whether a dialog should be open or not': 'open', 'returnValue Sets or returns the dialog"s return value': 'returnValue', 'close() Closes the dialog': 'close()', 'show() Shows the dialog': 'show()', 'showModal() Shows the dialog and makes it the top-most modal dialog': 'showModal()'}, 
		\'div': {'align Not supported in HTML5. Usestyle.textAlign instead.Sets or returns the value of the align attribute of the <div> element': 'align'}, 
		\'dl': {}, 
		\'dt': {}, 
		\'em': {}, 
		\'event': {}, 
		\'figcaption': {}, 
		\'figure': {}, 
		\'fileupload': {'accept Sets or returns the value of the accept attribute of the file upload button': 'accept', 'autofocus Sets or returns whether a file upload button should automatically get focus upon page load': 'autofocus', 'defaultValue Sets or returns the default value of the file upload button': 'defaultValue', 'disabled Sets or returns whether the file upload button is disabled, or not': 'disabled', 'files Returns a FileList object that represents the file or files selected with the file upload button': 'files', 'form Returns a reference to the form that contains the file upload button': 'form', 'multiple Sets or returns whether a user is allowed to select more than one file in the file upload field': 'multiple', 'name Sets or returns the value of the name attribute of the file upload button': 'name', 'required Sets or returns whether a file in the file upload field must be selected before submitting a form': 'required', 'type Returns which type of form element the file upload button is': 'type', 'value Returns the path or the name of the selected file': 'value'}, 
		\'footer': {}, 
		\'head': {}, 
		\'header': {}, 
		\'html': {}, 
		\'i': {}, 
		\'ins': {'cite Sets or returns the value of the cite attribute of an inserted text': 'cite', 'dateTime Sets or returns the value of the datetime attribute of an inserted text': 'dateTime'}, 
		\'kbd': {}, 
		\'keygen': {'autofocus Sets or returns whether a keygen field automatically gets focus when the page loads, or not': 'autofocus', 'challenge Sets or returns the value of the challenge attribute of a keygen field': 'challenge', 'disabled Sets or returns whether a keygen field is disabled, or not': 'disabled', 'form Returns a reference to the form that contains the keygen field': 'form', 'keytype Sets or returns the value of the keytype attribute of a keygen field': 'keytype', 'name Sets or returns the value of the name attribute of a keygen field': 'name', 'type Returns which type of form element the keygen field is': 'type'}, 
		\'legend': {'form Returns a reference to the form that contains the legend': 'form'}, 
		\'map': {'areas Returns a collection of all <area> elements in an image-map': 'areas', 'images Returns a collection of all <img> and <object> elements associated with the image-map': 'images', 'name Sets or returns the value of the name attribute of an image-map': 'name'}, 
		\'mark': {}, 
		\'menu': {'label Sets or returns the value of the label attribute of the menu': 'label', 'type Sets or returns the value of the type attribute of the menu ': 'type'}, 
		\'menuitem': {'checked Sets or returns whether the menu item should be checked': 'checked', 'command Sets or returns the value of the command attribute of the menu item': 'command', 'default Sets or returns whether the menu item should be the default command': 'default', 'disabled Sets or returns whether the menu item should be disabled': 'disabled', 'icon Sets or returns an image that represents the menu item': 'icon', 'label Sets or returns the value of the label attribute of the menu item': 'label', 'radiogroup Sets or returns the value of the radiogroup attribute of the menu item': 'radiogroup', 'type Sets or returns the value of the type attribute of the menu item': 'type'}, 
		\'meter': {'high Sets or returns the value of the high attribute in a gauge': 'high', 'labels Returns a list of <label> elements that are labels for the gauge': 'labels', 'low Sets or returns the value of the low attribute in a gauge': 'low', 'max Sets or returns the value of the max attribute in a gauge': 'max', 'min Sets or returns the value of the min attribute in a gauge': 'min', 'optimum Sets or returns the value of the optimum attribute in a gauge': 'optimum', 'value Sets or returns the value of the value attribute in a gauge': 'value'}, 
		\'nav': {}, 
		\'object': {'align Not supported in HTML5. Usestyle.cssFloat instead. Sets or returns the alignment of the object according to the surrounding text': 'align', 'archive Not supported in HTML5.Sets or returns a string that can be used to implement your     own archive functionality for the object': 'archive', 'border Not supported in HTML5. Usestyle.border instead. Sets or returns the border around the object': 'border', 'code Not supported in HTML5. Sets or returns the URL of the file that contains the     compiled Java class': 'code', 'codeBase Not supported in HTML5. Sets or returns the URL of the component': 'codeBase', 'codeType Not supported in HTML5. ': 'codeType', 'data Sets or returns the URL of the resource to be used by the object': 'data', 'declare Not supported in HTML5. ': 'declare', 'form Returns a reference to the object"s parent form': 'form', 'height Sets or returns the height of the object': 'height', 'hspace Not supported in HTML5. Usestyle.margin instead. Sets or returns the horizontal margin of the object': 'hspace', 'name Sets or returns the name of the object': 'name', 'standby Not supported in HTML5. Sets or returns a message when loading the object': 'standby', 'type Sets or returns the content type for data downloaded via     the data attribute': 'type', 'useMap Sets or returns the name of a client-side image map to be used with the object': 'useMap', 'vspace Not supported in HTML5. Usestyle.margin instead. Sets or returns the vertical margin of the object': 'vspace', 'width Sets or returns the width of the object': 'width'}, 
		\'output': {'defaultValue Sets or returns the default value of an <output> element': 'defaultValue', 'form Returns a reference to the form that contains the <output> element': 'form', 'htmlFor Returns the value of the for attribute of an <output> element': 'htmlFor', 'labels Returns a list of <label> elements associated with the <output> element': 'labels', 'name Sets or returns the value of the name attribute of an <output> element': 'name', 'type Returns which type of HTML element the Output object represents': 'type', 'value Sets or returns the value of an <output> element': 'value'}, 
		\'param': {'name Sets or returns the value of the name attribute of a parameter': 'name', 'value Sets or returns the value of the value attribute of a parameter': 'value'}, 
		\'progress': {'labels Returns a list of the progress bar"s labels (if any)': 'labels', 'max Sets or returns the value of the max attribute of a progress bar': 'max', 'position Returns the current position of the progress bar': 'position', 'value Sets or returns the value of the value attribute of a progress bar': 'value'}, 
		\'pushbutton': {'autofocus Sets or returns whether a button should automatically get focus when the page loads, or not': 'autofocus', 'disabled Sets or returns whether a button is disabled, or not': 'disabled', 'form Returns a reference to the form that contains a button': 'form', 'formAction Sets or returns the value of the formaction attribute of a button': 'formAction', 'formEnctype Sets or returns the value of the formenctype attribute of a button': 'formEnctype', 'formMethod Sets or returns the value of the formmethod attribute of a button': 'formMethod', 'formNoValidate Sets or returns whether the form-data should be validated or not, on submission': 'formNoValidate', 'formTarget Sets or returns the value of the formtarget attribute of a button': 'formTarget', 'name Sets or returns the value of the name attribute of a button': 'name', 'type Sets or returns the type of a button': 'type', 'value Sets or returns the value of the value attribute of a button': 'value'}, 
		\'range': {'autocomplete Sets or returns the value of the autocomplete attribute of a slider control': 'autocomplete', 'autofocus Sets or returns whether a slider control should automatically get focus when the page loads': 'autofocus', 'defaultValue Sets or returns the default value of a slider control': 'defaultValue', 'disabled Sets or returns whether a slider control is disabled, or not': 'disabled', 'form Returns a reference to the form that contains the slider control': 'form', 'list Returns a reference to the datalist that contains the slider control': 'list', 'max Sets or returns the value of the max attribute of the slider control': 'max', 'min Sets or returns the value of the min attribute of the slider control': 'min', 'name Sets or returns the value of the name attribute of a slider control': 'name', 'step Sets or returns the value of the step attribute of the slider control': 'step', 'type Returns which type of form element the slider control is': 'type', 'value Sets or returns the value of the value attribute of a slider control': 'value', 'stepDown() Decrements the value of the slider control by a specified number': 'stepDown()', 'stepUp() Increments the value of the slider control by a specified number': 'stepUp()'}, 
		\'reset': {'autofocus Sets or returns whether a reset button should automatically get focus when the page loads': 'autofocus', 'defaultValue Sets or returns the default value of a reset button': 'defaultValue', 'disabled Sets or returns whether the reset button is disabled, or not': 'disabled', 'form Returns a reference to the form that contains the reset button': 'form', 'name Sets or returns the value of the name attribute of a reset button': 'name', 'type Returns which type of form element the reset button is': 'type', 'value Sets or returns the value of the value attribute of the reset button': 'value'}, 
		\'s': {}, 
		\'samp': {}, 
		\'section': {}, 
		\'small': {}, 
		\'source': {'media Sets or returns the value of the media attribute in a <source> element': 'media', 'src Sets or returns the value of the src attribute in a <source> element': 'src', 'type Sets or returns the value of the type attribute in a <source> element': 'type'}, 
		\'span': {}, 
		\'strong': {}, 
		\'style': {'alignContent Sets or returns the alignment between the lines inside a flexible container when the items do not use all available space': 'alignContent', 'alignItems Sets or returns the alignment for items inside a flexible container': 'alignItems', 'alignSelf Sets or returns the alignment for selected items inside a flexible container': 'alignSelf', 'animation A shorthand property for all the animation properties below, except the animationPlayState property': 'animation', 'animationDelay Sets or returns when the animation will start': 'animationDelay', 'animationDirection Sets or returns whether or not the animation should play in reverse on alternate cycles': 'animationDirection', 'animationDuration Sets or returns how many seconds or milliseconds an animation takes to complete one cycle': 'animationDuration', 'animationFillMode Sets or returns what values are applied by the animation outside the time it is executing': 'animationFillMode', 'animationIterationCount Sets or returns the number of times an animation should be played': 'animationIterationCount', 'animationName Sets or returns a name for the @keyframes animation': 'animationName', 'animationTimingFunction Sets or returns the speed curve of the animation': 'animationTimingFunction', 'animationPlayState Sets or returns whether the animation is running or paused': 'animationPlayState', 'background Sets or returns all the background properties in one declaration': 'background', 'backgroundAttachment Sets or returns whether a background-image is fixed or scrolls with the page': 'backgroundAttachment', 'backgroundColor Sets or returns the background-color of an element': 'backgroundColor', 'backgroundImage Sets or returns the background-image for an element': 'backgroundImage', 'backgroundPosition Sets or returns the starting position of a background-image': 'backgroundPosition', 'backgroundRepeat Sets or returns how to repeat (tile) a background-image': 'backgroundRepeat', 'backgroundClip Sets or returns the painting area of the background': 'backgroundClip', 'backgroundOrigin Sets or returns the positioning area of the background images': 'backgroundOrigin', 'backgroundSize Sets or returns the size of the background image': 'backgroundSize', 'backfaceVisibility Sets or returns whether or not an element should be visible when not facing the screen': 'backfaceVisibility', 'border Sets or returns borderWidth, borderStyle, and borderColor in one declaration': 'border', 'borderBottom Sets or returns all the borderBottom* properties in one declaration': 'borderBottom', 'borderBottomColor Sets or returns the color of the bottom border': 'borderBottomColor', 'borderBottomLeftRadius Sets or returns the shape of the border of the bottom-left corner': 'borderBottomLeftRadius', 'borderBottomRightRadius Sets or returns the shape of the border of the bottom-right corner': 'borderBottomRightRadius', 'borderBottomStyle Sets or returns the style of the bottom border': 'borderBottomStyle', 'borderBottomWidth Sets or returns the width of the bottom border': 'borderBottomWidth', 'borderCollapse Sets or returns whether the table border should be collapsed into a single border, or not': 'borderCollapse', 'borderColor Sets or returns the color of an element"s border (can have up to four values)': 'borderColor', 'borderImage A shorthand property for setting or returning all the borderImage* properties': 'borderImage', 'borderImageOutset Sets or returns the amount by which the border image area extends beyond the border box': 'borderImageOutset', 'borderImageRepeat Sets or returns whether the image-border should be repeated, rounded or stretched': 'borderImageRepeat', 'borderImageSlice Sets or returns the inward offsets of the image-border': 'borderImageSlice', 'borderImageSource Sets or returns the image to be used as a border': 'borderImageSource', 'borderImageWidth Sets or returns the widths of the image-border': 'borderImageWidth', 'borderLeft Sets or returns all the borderLeft* properties in one declaration': 'borderLeft', 'borderLeftColor Sets or returns the color of the left border': 'borderLeftColor', 'borderLeftStyle Sets or returns the style of the left border': 'borderLeftStyle', 'borderLeftWidth Sets or returns the width of the left border': 'borderLeftWidth', 'borderRadius A shorthand property for setting or returning all the four border*Radius properties': 'borderRadius', 'borderRight Sets or returns all the borderRight* properties in one declaration': 'borderRight', 'borderRightColor Sets or returns the color of the right border': 'borderRightColor', 'borderRightStyle Sets or returns the style of the right border': 'borderRightStyle', 'borderRightWidth Sets or returns the width of the right border': 'borderRightWidth', 'borderSpacing Sets or returns the space between cells in a table': 'borderSpacing', 'borderStyle Sets or returns the style of an element"s border (can have up to four values)': 'borderStyle', 'borderTop Sets or returns all the borderTop* properties in one declaration': 'borderTop', 'borderTopColor Sets or returns the color of the top border': 'borderTopColor', 'borderTopLeftRadius Sets or returns the shape of the border of the top-left corner': 'borderTopLeftRadius', 'borderTopRightRadius Sets or returns the shape of the border of the top-right corner': 'borderTopRightRadius', 'borderTopStyle Sets or returns the style of the top border': 'borderTopStyle', 'borderTopWidth Sets or returns the width of the top border': 'borderTopWidth', 'borderWidth Sets or returns the width of an element"s border (can have up to four values)': 'borderWidth', 'bottom Sets or returns the bottom position of a positioned element': 'bottom', 'boxDecorationBreak Sets or returns the behaviour of the background and border of an element at page-break, or, for  in-line elements, at line-break.': 'boxDecorationBreak', 'boxShadow Attaches one or more drop-shadows to the box': 'boxShadow', 'boxSizing Allows you to define certain elements to fit an area in a certain way': 'boxSizing', 'captionSide Sets or returns the position of the table caption': 'captionSide', 'clear Sets or returns the position of the element relative to floating objects': 'clear', 'clip Sets or returns which part of a positioned element is visible': 'clip', 'color Sets or returns the color of the text': 'color', 'columnCount Sets or returns the number of columns an element should be divided into': 'columnCount', 'columnFill Sets or returns how to fill columns': 'columnFill', 'columnGap Sets or returns the gap between the columns': 'columnGap', 'columnRule A shorthand property for setting or returning all the columnRule* properties': 'columnRule', 'columnRuleColor Sets or returns the color of the rule between columns': 'columnRuleColor', 'columnRuleStyle Sets or returns the style of the rule between columns': 'columnRuleStyle', 'columnRuleWidth Sets or returns the width of the rule between columns': 'columnRuleWidth', 'columns A shorthand property for setting or returning columnWidth and columnCount': 'columns', 'columnSpan Sets or returns how many columns an element should span across': 'columnSpan', 'columnWidth Sets or returns the width of the columns': 'columnWidth', 'content Used with the :before and :after pseudo-elements, to insert generated content': 'content', 'counterIncrement Increments one or more counters': 'counterIncrement', 'counterReset Creates or resets one or more counters': 'counterReset', 'cursor Sets or returns the type of cursor to display for the mouse pointer': 'cursor', 'direction Sets or returns the text direction': 'direction', 'display Sets or returns an element"s display type': 'display', 'emptyCells Sets or returns whether to show the border and background of empty cells, or not': 'emptyCells', 'filter Sets or returns image filters (visual effects, like blur and saturation)': 'filter', 'flex Sets or returns the length of the item, relative to the rest': 'flex', 'flexBasis Sets or returns the initial length of a flexible item': 'flexBasis', 'flexDirection Sets or returns the direction of the flexible items': 'flexDirection', 'flexFlow A shorthand property for the flexDirection and the flexWrap properties': 'flexFlow', 'flexGrow Sets or returns how much the item will grow relative to the rest': 'flexGrow', 'flexShrink Sets or returns how the item will shrink relative to the rest': 'flexShrink', 'flexWrap Sets or returns whether the flexible items should wrap or not': 'flexWrap', 'cssFloat Sets or returns the horizontal alignment of an element': 'cssFloat', 'font Sets or returns fontStyle, fontVariant, fontWeight, fontSize, lineHeight, and fontFamily in one declaration': 'font', 'fontFamily Sets or returns the font family for text': 'fontFamily', 'fontSize Sets or returns the font size of the text': 'fontSize', 'fontStyle Sets or returns whether the style of the font is normal, italic or oblique': 'fontStyle', 'fontVariant Sets or returns whether the font should be displayed in small capital letters': 'fontVariant', 'fontWeight Sets or returns the boldness of the font': 'fontWeight', 'fontSizeAdjust Preserves the readability of text when font fallback occurs': 'fontSizeAdjust', 'fontStretch Selects a normal, condensed, or expanded face from a font family': 'fontStretch', 'hangingPunctuation Specifies whether a punctuation character may be placed outside the line box': 'hangingPunctuation', 'height Sets or returns the height of an element': 'height', 'hyphens Sets how to split words to improve the layout of paragraphs': 'hyphens', 'icon Provides the author the ability to style an element with an iconic equivalent': 'icon', 'imageOrientation Specifies a rotation in the right or clockwise direction that a user agent applies to an image': 'imageOrientation', 'justifyContent Sets or returns the alignment between the items inside a flexible container when the items do not use all available space.': 'justifyContent', 'left Sets or returns the left position of a positioned element': 'left', 'letterSpacing Sets or returns the space between characters in a text': 'letterSpacing', 'lineHeight Sets or returns the distance between lines in a text': 'lineHeight', 'listStyle Sets or returns listStyleImage, listStylePosition, and listStyleType in one declaration': 'listStyle', 'listStyleImage Sets or returns an image as the list-item marker': 'listStyleImage', 'listStylePosition Sets or returns the position of the list-item marker': 'listStylePosition', 'listStyleType Sets or returns the list-item marker type': 'listStyleType', 'margin Sets or returns the margins of an element (can have up to four values)': 'margin', 'marginBottom Sets or returns the bottom margin of an element': 'marginBottom', 'marginLeft Sets or returns the left margin of an element': 'marginLeft', 'marginRight Sets or returns the right margin of an element': 'marginRight', 'marginTop Sets or returns the top margin of an element': 'marginTop', 'maxHeight Sets or returns the maximum height of an element': 'maxHeight', 'maxWidth Sets or returns the maximum width of an element': 'maxWidth', 'minHeight Sets or returns the minimum height of an element': 'minHeight', 'minWidth Sets or returns the minimum width of an element': 'minWidth', 'navDown Sets or returns where to navigate when using the arrow-down navigation key': 'navDown', 'navIndex Sets or returns the tabbing order for an element': 'navIndex', 'navLeft Sets or returns where to navigate when using the arrow-left navigation key': 'navLeft', 'navRight Sets or returns where to navigate when using the arrow-right navigation key': 'navRight', 'navUp Sets or returns where to navigate when using the arrow-up navigation key': 'navUp', 'opacity Sets or returns the opacity level for an element': 'opacity', 'order Sets or returns the order of the flexible item, relative to the rest': 'order', 'orphans Sets or returns the minimum number of lines for an element that must be left at the bottom of a page when a page break occurs inside an element': 'orphans', 'outline Sets or returns all the outline properties in one declaration': 'outline', 'outlineColor Sets or returns the color of the outline around a element': 'outlineColor', 'outlineOffset Offsets an outline, and draws it beyond the border edge': 'outlineOffset', 'outlineStyle Sets or returns the style of the outline around an element': 'outlineStyle', 'outlineWidth Sets or returns the width of the outline around an element': 'outlineWidth', 'overflow Sets or returns what to do with content that renders outside the element box': 'overflow', 'overflowX Specifies what to do with the left/right edges of the content, if it overflows the element"s content area': 'overflowX', 'overflowY Specifies what to do with the top/bottom edges of the content, if it overflows the element"s content area': 'overflowY', 'padding Sets or returns the padding of an element (can have up to four values)': 'padding', 'paddingBottom Sets or returns the bottom padding of an element': 'paddingBottom', 'paddingLeft Sets or returns the left padding of an element': 'paddingLeft', 'paddingRight Sets or returns the right padding of an element': 'paddingRight', 'paddingTop Sets or returns the top padding of an element': 'paddingTop', 'pageBreakAfter Sets or returns the page-break behavior after an element': 'pageBreakAfter', 'pageBreakBefore Sets or returns the page-break behavior before an element': 'pageBreakBefore', 'pageBreakInside Sets or returns the page-break behavior inside an element': 'pageBreakInside', 'perspective Sets or returns the perspective on how 3D elements are viewed': 'perspective', 'perspectiveOrigin Sets or returns the bottom position of 3D elements': 'perspectiveOrigin', 'position Sets or returns the type of positioning method used for an element (static, relative, absolute or fixed)': 'position', 'quotes Sets or returns the type of quotation marks for embedded quotations': 'quotes', 'resize Sets or returns whether or not an element is resizable by the user': 'resize', 'right Sets or returns the right position of a positioned element': 'right', 'tableLayout Sets or returns the way to lay out table cells, rows, and columns': 'tableLayout', 'tabSize Sets or returns the length of the tab-character': 'tabSize', 'textAlign Sets or returns the horizontal alignment of text': 'textAlign', 'textAlignLast Sets or returns how the last line of a block or a line right before a forced line break is aligned when text-align is "justify"': 'textAlignLast', 'textDecoration Sets or returns the decoration of a text': 'textDecoration', 'textDecorationColor Sets or returns the color of the text-decoration': 'textDecorationColor', 'textDecorationLine Sets or returns the type of line in a text-decoration': 'textDecorationLine', 'textDecorationStyle Sets or returns the style of the line in a text decoration': 'textDecorationStyle', 'textIndent Sets or returns the indentation of the first line of text': 'textIndent', 'textJustify Sets or returns the justification method used when text-align is "justify"': 'textJustify', 'textOverflow Sets or returns what should happen when text overflows the containing element': 'textOverflow', 'textShadow Sets or returns the shadow effect of a text': 'textShadow', 'textTransform Sets or returns the capitalization of a text': 'textTransform', 'top Sets or returns the top position of a positioned element': 'top', 'transform Applies a 2D or 3D transformation to an element': 'transform', 'transformOrigin Sets or returns the position of transformed elements': 'transformOrigin', 'transformStyle Sets or returns how nested elements are rendered in 3D space': 'transformStyle', 'transition A shorthand property for setting or returning the four transition properties': 'transition', 'transitionProperty Sets or returns the CSS property that the transition effect is for': 'transitionProperty', 'transitionDuration Sets or returns how many seconds or milliseconds a transition effect takes to complete': 'transitionDuration', 'transitionTimingFunction Sets or returns the speed curve of the transition effect': 'transitionTimingFunction', 'transitionDelay Sets or returns when the transition effect will start': 'transitionDelay', 'unicodeBidi Sets or returns whether the text should be overridden to support multiple languages in the same document': 'unicodeBidi', 'verticalAlign Sets or returns the vertical alignment of the content in an element': 'verticalAlign', 'visibility Sets or returns whether an element should be visible': 'visibility', 'whiteSpace Sets or returns how to handle tabs, line breaks and whitespace in a text': 'whiteSpace', 'width Sets or returns the width of an element': 'width', 'wordBreak Sets or returns line breaking rules for non-CJK scripts': 'wordBreak', 'wordSpacing Sets or returns the spacing between words in a text': 'wordSpacing', 'wordWrap Allows long, unbreakable words to be broken and wrap to the next line': 'wordWrap', 'widows Sets or returns the minimum number of lines for an element that must be visible at the top of a page': 'widows', 'zIndex Sets or returns the stack order of a positioned element': 'zIndex'}, 
		\'sub': {}, 
		\'submit': {'autofocus Sets or returns whether a submit button should automatically get focus when the page loads': 'autofocus', 'defaultValue Sets or returns the default value of a submit button': 'defaultValue', 'disabled Sets or returns whether the submit button is disabled, or not': 'disabled', 'form Returns a reference to the form that contains the submit button': 'form', 'formAction Sets or returns the value of the formaction attribute of a submit button': 'formAction', 'formEnctype Sets or returns the value of the formenctype attribute of a submit button': 'formEnctype', 'formMethod Sets or returns the value of the formmethod attribute of a submit button': 'formMethod', 'formNoValidate Sets or returns whether the form-data should be validated or not, on submission': 'formNoValidate', 'formTarget Sets or returns the value of the formtarget attribute of a submit button': 'formTarget', 'name Sets or returns the value of the name attribute of a submit button': 'name', 'type Returns which type of form element the submit button is': 'type', 'value Sets or returns the value of the value attribute of the submit button': 'value'}, 
		\'summary': {}, 
		\'sup': {}, 
		\'text': {'autocomplete Sets or returns the value of the autocomplete attribute of a text field': 'autocomplete', 'autofocus Sets or returns whether a text field should automatically get focus when the page loads': 'autofocus', 'defaultValue Sets or returns the default value of a text field': 'defaultValue', 'disabled Sets or returns whether the text field is disabled, or not': 'disabled', 'form Returns a reference to the form that contains the text field': 'form', 'list Returns a reference to the datalist that contains the text field': 'list', 'maxLength Sets or returns the value of the maxlength attribute of a text field': 'maxLength', 'name Sets or returns the value of the name attribute of a text field': 'name', 'pattern Sets or returns the value of the pattern attribute of a text field': 'pattern', 'placeholder Sets or returns the value of the placeholder attribute of a text field': 'placeholder', 'readOnly Sets or returns whether a text field is read-only, or not': 'readOnly', 'required Sets or returns whether the text field must be filled out before submitting a form': 'required', 'size Sets or returns the value of the size attribute of a text field': 'size', 'type Returns which type of form element a text field is': 'type', 'value Sets or returns the value of the value attribute of the     text field': 'value'}, 
		\'time': {'dateTime Sets or returns the value of the datetime attribute in a <time> element': 'dateTime'}, 
		\'title': {'text Sets or returns the text of the document"s title': 'text'}, 
		\'track': {'default Sets or returns the default state of the track': 'default', 'kind Sets or returns the value of the kind attribute of the track': 'kind', 'label Sets or returns the value of the label attribute of the track': 'label', 'readyState Returns the current state of the track resource': 'readyState', 'src Sets or returns the value of the src attribute of the track': 'src', 'srclang Sets or returns the value of the srclang attribute of the track': 'srclang', 'track Returns a TextTrack object representing the track element"s text track data': 'track'}, 
		\'u': {}, 
		\'var': {}, 
	return self.pickL(all)
endfunction


XPT dom
XSET name.pre=name
`name^NextC($_xDomObj)^

